"use client"

import { useState, useEffect } from "react"
import { Building2, BookOpen, Users, CreditCard, TrendingUp, CheckCircle, FileText, Calendar, BarChart3, RefreshCw } from "lucide-react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/Badge"
import { Button } from "@/components/ui/button"
import { BooksTable } from "./components/BooksTable"
import type { AdminDashboardData } from "@/lib/types/admin"

// ============================================================================
// –ê–î–ú–Ü–ù-–ü–ê–ù–ï–õ–¨ STEFA.BOOKS
// ============================================================================

export default function AdminPage() {
  const [data, setData] = useState<AdminDashboardData | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [refreshing, setRefreshing] = useState(false)

  // ============================================================================
  // –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –î–ê–ù–ò–•
  // ============================================================================

  async function loadData() {
    try {
      setLoading(true)
      setError(null)
      
      console.log('üöÄ Admin page: Starting to load data...')
      
      // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
      const staticData = {
        stats: {
          totalBooks: 19,
          availableBooks: 16,
          activeUsers: 25,
          totalRevenue: 8500,
          totalBooksCost: 3200
        },
        books: [
          {
            id: 'temp-1',
            code: 'DL-001',
            title: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞',
            author: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–≤—Ç–æ—Ä',
            category_id: 'children-literature',
            category_name: '–î–∏—Ç—è—á–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞',
            subcategory: null,
            description: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏',
            short_description: '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
            isbn: null,
            pages: 100,
            age_range: '6+',
            language: 'Ukrainian',
            publisher: null,
            publication_year: null,
            cover_url: '/images/books/test.jpg',
            status: 'available' as const,
            available: true,
            qty_total: 1,
            qty_available: 1,
            price_uah: 150,
            location: '–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è',
            rating: 4.5,
            rating_count: 10,
            badges: ['–¢–µ—Å—Ç'],
            tags: ['—Ç–µ—Å—Ç'],
            created_at: new Date().toISOString(),
            updated_at: new Date().toISOString()
          }
        ],
        users: [],
        rentals: [],
        payments: []
      }
      
      console.log('‚úÖ Static data ready:', staticData)
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
      await new Promise(resolve => setTimeout(resolve, 500))
      
      setData(staticData)
      console.log('‚úÖ Data set to state!')
      
    } catch (err) {
      console.error('üí• Failed to load admin data:', err)
      setError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.')
    } finally {
      setLoading(false)
      console.log('üèÅ Loading finished!')
    }
  }

  async function handleRefresh() {
    try {
      setRefreshing(true)
      await loadData()
    } finally {
      setRefreshing(false)
    }
  }

  useEffect(() => {
    loadData()
  }, [])

  // ============================================================================
  // –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–î–Ü–ô
  // ============================================================================

  function handleBookCreated() {
    loadData()
  }

  // ============================================================================
  // –†–ï–ù–î–ï–† –°–¢–û–†–Ü–ù–ö–ò
  // ============================================================================

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-b from-gray-50 to-white flex items-center justify-center">
        <div className="text-center space-y-4">
          <div className="animate-spin rounded-2xl h-12 w-12 border-b-2 border-gray-600 mx-auto"></div>
          <p className="text-gray-600 text-body-lg font-medium">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ...</p>
          <p className="text-gray-500 text-sm">–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ</p>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gradient-to-b from-gray-50 to-white flex items-center justify-center">
        <div className="text-center space-y-6 max-w-md mx-auto px-4">
          <div className="w-16 h-16 bg-red-100 rounded-2xl flex items-center justify-center mx-auto">
            <FileText className="size-8 text-red-600" />
          </div>
          <div>
            <h2 className="text-h3 text-gray-900 mb-2">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h2>
            <p className="text-gray-600 mb-6">{error}</p>
            <div className="space-y-3">
              <Button 
                onClick={handleRefresh}
                disabled={refreshing}
                className="w-full"
              >
                {refreshing ? (
                  <>
                    <RefreshCw className="size-4 mr-2 animate-spin" />
                    –û–Ω–æ–≤–ª–µ–Ω–Ω—è...
                  </>
                ) : (
                  <>
                    <RefreshCw className="size-4 mr-2" />
                    –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
                  </>
                )}
              </Button>
              <Button 
                variant="outline" 
                onClick={() => window.location.reload()}
                className="w-full"
              >
                –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É
              </Button>
            </div>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-gray-50 to-white">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="sticky top-0 z-50 border-b border-gray-200/60 bg-white/90 backdrop-blur-sm">
        <div className="w-full px-4 py-6 lg:px-6 xl:px-8 2xl:px-10">
          <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
            <div className="flex items-center gap-4">
              <div className="flex size-14 items-center justify-center rounded-2xl border border-gray-200 bg-white shadow-sm">
                <Building2 className="size-7 text-gray-600"/>
              </div>
              <div>
                <div className="text-body-sm text-gray-500 font-medium">–ê–¥–º—ñ–Ω‚Äë–ø–∞–Ω–µ–ª—å</div>
                <h1 className="text-h1 tracking-tight text-gray-900">
                  Stefa.books ‚Äî –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
                </h1>
              </div>
            </div>
            <div className="flex items-center gap-3">
              <Badge variant="outline" className="bg-green-50 text-green-700 border-green-200 flex items-center gap-2 px-3 py-1">
                <CheckCircle className="size-4" />
                <span className="hidden sm:inline">–°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞—Ü—é—î</span>
                <span className="sm:hidden">–û–ö</span>
              </Badge>
              <Button
                variant="outline"
                size="md"
                onClick={handleRefresh}
                disabled={refreshing}
                className="hidden sm:flex"
              >
                {refreshing ? (
                  <>
                    <RefreshCw className="size-4 mr-2 animate-spin" />
                    –û–Ω–æ–≤–ª–µ–Ω–Ω—è
                  </>
                ) : (
                  <>
                    <RefreshCw className="size-4 mr-2" />
                    –û–Ω–æ–≤–∏—Ç–∏
                  </>
                )}
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="w-full px-4 py-8 lg:px-6 xl:px-8 2xl:px-10">
        <div className="space-y-8">
          
          {/* KPI –º–µ—Ç—Ä–∏–∫–∏ */}
          <div className="grid gap-4 sm:gap-6 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-4 2xl:grid-cols-6">
            <Card className="rounded-2xl border-gray-200 shadow-sm hover:shadow-md transition-shadow">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-3">
                <CardTitle className="text-body-sm font-semibold text-gray-700">–ö–Ω–∏–≥–∏ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ</CardTitle>
                <BookOpen className="h-5 w-5 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-h2 text-green-600">
                  {data?.stats.availableBooks || 0}
                </div>
                <p className="text-caption text-gray-500 mt-1">
                  –∑ {data?.stats.totalBooks || 0} –∑–∞–≥–∞–ª–æ–º
                </p>
              </CardContent>
            </Card>

            <Card className="rounded-2xl border-gray-200 shadow-sm hover:shadow-md transition-shadow">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-3">
                <CardTitle className="text-body-sm font-semibold text-gray-700">–ê–∫—Ç–∏–≤–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</CardTitle>
                <Users className="h-5 w-5 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-h2 text-brand-accent-light">
                  {data?.stats.activeUsers || 0}
                </div>
                <p className="text-caption text-gray-500 mt-1">
                  –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤
                </p>
              </CardContent>
            </Card>

            <Card className="rounded-2xl border-gray-200 shadow-sm hover:shadow-md transition-shadow">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-3">
                <CardTitle className="text-body-sm font-semibold text-gray-700">–î–æ—Ö–æ–¥–∏ (–º—ñ—Å—è—Ü—å)</CardTitle>
                <CreditCard className="h-5 w-5 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-h2 text-purple-600">
                  {(data?.stats.totalRevenue || 0).toLocaleString('uk-UA')} ‚Ç¥
                </div>
                <p className="text-caption text-gray-500 mt-1">
                  –í–∏—Ç—Ä–∞—Ç–∏: {(data?.stats.totalBooksCost || 0).toLocaleString('uk-UA')} ‚Ç¥
                </p>
                <p className="text-caption text-green-600 font-medium mt-1">
                  –ü—Ä–∏–±—É—Ç–æ–∫: {((data?.stats.totalRevenue || 0) - (data?.stats.totalBooksCost || 0)).toLocaleString('uk-UA')} ‚Ç¥
                </p>
              </CardContent>
            </Card>

            <Card className="rounded-2xl border-gray-200 shadow-sm hover:shadow-md transition-shadow">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-3">
                <CardTitle className="text-body-sm font-semibold text-gray-700">–†–û–Ü (–æ–∫—É–ø–Ω—ñ—Å—Ç—å)</CardTitle>
                <TrendingUp className="h-5 w-5 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-h2 text-orange-600">
                  {data?.stats.totalBooksCost ? Math.round(((data?.stats.totalRevenue || 0) / data.stats.totalBooksCost) * 100) : 0}%
                </div>
                <p className="text-caption text-gray-500 mt-1">
                  –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ–π
                </p>
              </CardContent>
            </Card>

            {/* –î–æ–¥–∞—Ç–∫–æ–≤—ñ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è —à–∏—Ä–æ–∫–∏—Ö –µ–∫—Ä–∞–Ω—ñ–≤ */}
            <Card className="rounded-2xl border-gray-200 shadow-sm hover:shadow-md transition-shadow hidden 2xl:block">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-3">
                <CardTitle className="text-body-sm font-semibold text-gray-700">–°–µ—Ä–µ–¥–Ω—è —Ü—ñ–Ω–∞</CardTitle>
                <FileText className="h-5 w-5 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-h2 text-indigo-600">
                  {data?.stats.totalBooks ? Math.round((data?.stats.totalBooksCost || 0) / data.stats.totalBooks) : 0} ‚Ç¥
                </div>
                <p className="text-caption text-gray-500 mt-1">
                  –∑–∞ –∫–Ω–∏–≥—É –≤ –∫–æ–ª–µ–∫—Ü—ñ—ó
                </p>
              </CardContent>
            </Card>

            <Card className="rounded-2xl border-gray-200 shadow-sm hover:shadow-md transition-shadow hidden 2xl:block">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-3">
                <CardTitle className="text-body-sm font-semibold text-gray-700">–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</CardTitle>
                <BarChart3 className="h-5 w-5 text-gray-500" />
              </CardHeader>
              <CardContent>
                <div className="text-h2 text-teal-600">
                  {data?.stats.totalBooks ? Math.round(((data?.stats.totalBooks - data?.stats.availableBooks) / data.stats.totalBooks) * 100) : 0}%
                </div>
                <p className="text-caption text-gray-500 mt-1">
                  –∫–Ω–∏–≥ –∑–∞—Ä–∞–∑ —É —á–∏—Ç–∞—á—ñ–≤
                </p>
              </CardContent>
            </Card>
          </div>

          {/* –ì–æ–ª–æ–≤–Ω—ñ —Ç–∞–±–∏ */}
          <Tabs defaultValue="books" className="space-y-6">
            <TabsList className="grid w-full grid-cols-4 rounded-2xl bg-gray-100 p-1">
              <TabsTrigger value="books" className="rounded-xl flex items-center gap-2 data-[state=active]:bg-white data-[state=active]:shadow-sm">
                <BookOpen className="size-4" />
                <span className="hidden sm:inline">–ö–Ω–∏–≥–∏</span>
              </TabsTrigger>
              <TabsTrigger value="users" className="rounded-xl flex items-center gap-2 data-[state=active]:bg-white data-[state=active]:shadow-sm">
                <Users className="size-4" />
                <span className="hidden sm:inline">–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</span>
              </TabsTrigger>
              <TabsTrigger value="rentals" className="rounded-xl flex items-center gap-2 data-[state=active]:bg-white data-[state=active]:shadow-sm">
                <Calendar className="size-4" />
                <span className="hidden sm:inline">–û—Ä–µ–Ω–¥–∏</span>
              </TabsTrigger>
              <TabsTrigger value="reports" className="rounded-xl flex items-center gap-2 data-[state=active]:bg-white data-[state=active]:shadow-sm">
                <BarChart3 className="size-4" />
                <span className="hidden sm:inline">–ó–≤—ñ—Ç–∏</span>
              </TabsTrigger>
            </TabsList>

            {/* –¢–∞–± –∫–Ω–∏–≥ */}
            <TabsContent value="books" className="space-y-4">
              <BooksTable
                books={data?.books || []}
                onRefresh={handleRefresh}
                onBookCreated={handleBookCreated}
              />
            </TabsContent>

            {/* –¢–∞–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ */}
            <TabsContent value="users" className="space-y-4">
              <Card className="rounded-2xl border-gray-200 shadow-sm">
                <CardHeader>
                  <CardTitle className="text-gray-900">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-center py-12 text-gray-500">
                    <Users className="size-16 mx-auto mb-4 opacity-50" />
                    <p className="text-body-lg font-semibold text-gray-700 mb-2">–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</p>
                    <p className="text-gray-500">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–Ω–∏–∫–∞–º–∏ (–≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ)</p>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            {/* –¢–∞–± –æ—Ä–µ–Ω–¥—É–≤–∞–Ω—å */}
            <TabsContent value="rentals" className="space-y-4">
              <Card className="rounded-2xl border-gray-200 shadow-sm">
                <CardHeader>
                  <CardTitle className="text-gray-900">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –æ—Ä–µ–Ω–¥–∞–º–∏</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-center py-12 text-gray-500">
                    <Calendar className="size-16 mx-auto mb-4 opacity-50" />
                    <p className="text-body-lg font-semibold text-gray-700 mb-2">–û—Ä–µ–Ω–¥–Ω—ñ –∑–∞–ø–∏—Å–∏</p>
                    <p className="text-gray-500">–í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤–∏–¥–∞—á—ñ —Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω—å (–≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ)</p>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            {/* –¢–∞–± –∑–≤—ñ—Ç—ñ–≤ */}
            <TabsContent value="reports" className="space-y-4">
              <Card className="rounded-2xl border-gray-200 shadow-sm">
                <CardHeader>
                  <CardTitle className="text-gray-900">–ó–≤—ñ—Ç–∏ —Ç–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-center py-12 text-gray-500">
                    <BarChart3 className="size-16 mx-auto mb-4 opacity-50" />
                    <p className="text-body-lg font-semibold text-gray-700 mb-2">–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞</p>
                    <p className="text-gray-500">–§—ñ–Ω–∞–Ω—Å–æ–≤—ñ –∑–≤—ñ—Ç–∏ —Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ)</p>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </div>
      </div>
    </div>
  )
}