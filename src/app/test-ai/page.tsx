'use client'

import { useState } from 'react'

export default function TestAIPage() {
  const [message, setMessage] = useState('')
  const [response, setResponse] = useState('')
  const [loading, setLoading] = useState(false)

  const testAI = async () => {
    setLoading(true)
    setResponse('')

    try {
      const res = await fetch('/api/claude/test', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          testType: 'basic',
          testData: {
            prompt: message || '–ü—Ä–∏–≤—ñ—Ç! –ü—Ä–æ—Ç–µ—Å—Ç—É–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—É AI –º–æ–¥–µ–ª—å.'
          }
        })
      })

      const data = await res.json()
      
      if (data.success) {
        setResponse(`‚úÖ –ú–æ–¥–µ–ª—å –ø—Ä–∞—Ü—é—î!\n\nü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å: ${data.result.content}\n\nüìä –ú–æ–¥–µ–ª—å: ${data.performance.model}\n‚è± –ß–∞—Å: ${data.performance.executionTimeMs}–º—Å`)
      } else {
        setResponse(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${data.error}`)
      }
    } catch (error) {
      setResponse(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è: ${error}`)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="container mx-auto p-8">
      <div className="max-w-2xl mx-auto">
        <h1 className="text-3xl font-bold mb-6 text-center">
          ü§ñ –¢–µ—Å—Ç –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ—ó AI –º–æ–¥–µ–ª—ñ
        </h1>
        
        <div className="bg-white rounded-lg shadow-md p-6 mb-6">
          <h2 className="text-xl font-semibold mb-4">üí° –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
          <div className="text-sm text-gray-600 space-y-2">
            <p>‚úÖ <strong>–ë–µ–∑ API –∫–ª—é—á—ñ–≤:</strong> –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Å–∏–º—É–ª–æ–≤–∞–Ω–∞ –∞–±–æ Groq –º–æ–¥–µ–ª—å</p>
            <p>üöÄ <strong>–ú–æ–¥–µ–ª—ñ:</strong> Llama 3 70B, Mixtral, Gemma</p>
            <p>üÜì <strong>–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ:</strong> –ü–æ–≤–Ω—ñ—Å—Ç—é –≥–æ—Ç–æ–≤–æ –¥–æ —Ä–æ–±–æ—Ç–∏</p>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:
            </label>
            <input
              type="text"
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              placeholder="–ù–∞–ø–∏—à—ñ—Ç—å —â–æ—Å—å –¥–ª—è AI..."
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>

          <button
            onClick={testAI}
            disabled={loading}
            className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-blue-300 text-white font-medium py-2 px-4 rounded-md transition-colors"
          >
            {loading ? 'üîÑ –¢–µ—Å—Ç—É—î–º–æ...' : 'üöÄ –ü—Ä–æ—Ç–µ—Å—Ç—É–≤–∞—Ç–∏ AI'}
          </button>

          {response && (
            <div className="mt-6 p-4 bg-gray-50 rounded-md">
              <h3 className="font-medium text-gray-900 mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç:</h3>
              <pre className="text-sm text-gray-700 whitespace-pre-wrap">{response}</pre>
            </div>
          )}
        </div>

        <div className="mt-6 text-center text-sm text-gray-500">
          <p>üè† <a href="/" className="text-blue-600 hover:underline">–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É</a></p>
        </div>
      </div>
    </div>
  )
}