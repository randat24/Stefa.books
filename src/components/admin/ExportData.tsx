'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Download, FileText, Users, BookOpen, Tag, Calendar, Mail } from 'lucide-react'
import { toast } from 'sonner'

interface ExportDataProps {
  className?: string
}

export default function ExportData({ className }: ExportDataProps) {
  const [isExporting, setIsExporting] = useState(false)
  const [exportType, setExportType] = useState<string | null>(null)

  const exportOptions = [
    {
      id: 'all',
      title: '–í—Å–µ –¥–∞–Ω–Ω—ã–µ',
      description: '–≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
      icon: FileText,
      color: 'bg-[var(--brand)]'
    },
    {
      id: 'books',
      title: '–ö–Ω–∏–≥–∏',
      description: '–ö–∞—Ç–∞–ª–æ–≥ –≤—Å–µ—Ö –∫–Ω–∏–≥',
      icon: BookOpen,
      color: 'bg-green-500'
    },
    {
      id: 'users',
      title: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
      description: '–ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      icon: Users,
      color: 'bg-purple-500'
    },
    {
      id: 'categories',
      title: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
      description: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–Ω–∏–≥',
      icon: Tag,
      color: 'bg-orange-500'
    },
    {
      id: 'rentals',
      title: '–ê—Ä–µ–Ω–¥—ã',
      description: '–ò—Å—Ç–æ—Ä–∏—è –∞—Ä–µ–Ω–¥',
      icon: Calendar,
      color: 'bg-red-500'
    },
    {
      id: 'subscription_requests',
      title: '–ó–∞—è–≤–∫–∏',
      description: '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É',
      icon: Mail,
      color: 'bg-indigo-500'
    }
  ]

  const handleExport = async (type: string) => {
    try {
      setIsExporting(true)
      setExportType(type)

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
      const authToken = localStorage.getItem('supabase.auth.token')
      const token = authToken ? JSON.parse(authToken).access_token : null

      if (!token) {
        toast.error('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É')
        return
      }

      // –í—ã–ø–æ–ª–Ω—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç
      const response = await fetch(`/api/admin/export?type=${type}`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      })

      if (!response.ok) {
        const errorData = await response.json()
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞')
      }

      // –°–æ–∑–¥–∞–µ–º blob –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
      const blob = await response.blob()
      const url = window.URL.createObjectURL(blob)
      const link = document.createElement('a')
      link.href = url
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
      const contentDisposition = response.headers.get('content-disposition')
      const filename = contentDisposition
        ? contentDisposition.split('filename=')[1]?.replace(/"/g, '')
        : `export_${type}_${new Date().toISOString().split('T')[0]}.csv`
      
      link.download = filename
      document.body.appendChild(link)
      link.click()
      document.body.removeChild(link)
      window.URL.revokeObjectURL(url)

      toast.success(`–î–∞–Ω–Ω—ã–µ ${type === 'all' ? '—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã' : '—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã'} —É—Å–ø–µ—à–Ω–æ`)
      
    } catch (error: any) {
      console.error('Export error:', error)
      toast.error(`–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${error.message}`)
    } finally {
      setIsExporting(false)
      setExportType(null)
    }
  }

  const handleExportAll = async () => {
    try {
      setIsExporting(true)
      setExportType('all')

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
      const authToken = localStorage.getItem('supabase.auth.token')
      const token = authToken ? JSON.parse(authToken).access_token : null

      if (!token) {
        toast.error('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É')
        return
      }

      // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
      const response = await fetch('/api/admin/export?type=all', {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      })

      if (!response.ok) {
        const errorData = await response.json()
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞')
      }

      // –°–æ–∑–¥–∞–µ–º blob –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
      const blob = await response.blob()
      const url = window.URL.createObjectURL(blob)
      const link = document.createElement('a')
      link.href = url
      link.download = `full_database_export_${new Date().toISOString().split('T')[0]}.csv`
      document.body.appendChild(link)
      link.click()
      document.body.removeChild(link)
      window.URL.revokeObjectURL(url)

      toast.success('–í—Å–µ –¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
      
    } catch (error: any) {
      console.error('Export error:', error)
      toast.error(`–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${error.message}`)
    } finally {
      setIsExporting(false)
      setExportType(null)
    }
  }

  return (
    <div className={className}>
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Download className="h-5 w-5" />
            –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
          </CardTitle>
          <CardDescription>
            –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª—ã –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö */}
          <div className="flex justify-center">
            <Button
              onClick={handleExportAll}
              disabled={isExporting}
              size="lg"
              className="bg-[var(--brand)] hover:bg-[var(--brand-600)] text-[#111827]"
            >
              {isExporting && exportType === 'all' ? (
                <>
                  <div className="animate-spin rounded-2xl h-4 w-4 border-b-2 border-neutral-0 mr-2" />
                  –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö...
                </>
              ) : (
                <>
                  <FileText className="h-4 w-4 mr-2" />
                  –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
                </>
              )}
            </Button>
          </div>

          {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
          <div className="relative">
            <div className="absolute inset-0 flex items-center">
              <span className="w-full border-t" />
            </div>
            <div className="relative flex justify-center text-caption uppercase">
              <span className="bg-background px-2 text-muted-foreground">
                –ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
              </span>
            </div>
          </div>

          {/* –û–ø—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {exportOptions.map((option) => {
              const Icon = option.icon
              const isCurrentlyExporting = isExporting && exportType === option.id
              
              return (
                <Card
                  key={option.id}
                  className={`cursor-pointer transition-all hover:shadow-md ${
                    isCurrentlyExporting ? 'ring-2 ring-blue-500' : ''
                  }`}
                  onClick={() => handleExport(option.id)}
                >
                  <CardContent className="p-4">
                    <div className="flex items-center space-x-3">
                      <div className={`p-2 rounded-lg ${option.color} text-neutral-0`}>
                        <Icon className="h-4 w-4" />
                      </div>
                      <div className="flex-1 min-w-0">
                        <h3 className="text-body-sm font-medium text-neutral-900">
                          {option.title}
                        </h3>
                        <p className="text-caption text-neutral-500">
                          {option.description}
                        </p>
                      </div>
                      {isCurrentlyExporting && (
                        <div className="animate-spin rounded-2xl h-4 w-4 border-b-2 border-blue-500" />
                      )}
                    </div>
                  </CardContent>
                </Card>
              )
            })}
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —ç–∫—Å–ø–æ—Ä—Ç–µ */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h4 className="text-body-sm font-medium text-blue-900 mb-2">
              üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Å–ø–æ—Ä—Ç–µ
            </h4>
            <ul className="text-caption text-blue-800 space-y-1">
              <li>‚Ä¢ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV</li>
              <li>‚Ä¢ –ö–æ–¥–∏—Ä–æ–≤–∫–∞: UTF-8</li>
              <li>‚Ä¢ –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å: –∑–∞–ø—è—Ç–∞—è</li>
              <li>‚Ä¢ –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏</li>
              <li>‚Ä¢ –§–∞–π–ª—ã –º–æ–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ Google Sheets</li>
            </ul>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
