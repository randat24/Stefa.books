// –¢–∏–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–∏—Å—Ç–µ–º—ã –∞—Ä–µ–Ω–¥—ã
import type { Plan } from '@/store/ui';

// –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export type UserStatus = 'guest' | 'registered' | 'subscriber' | 'vip';

// –£—Ä–æ–≤–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è)  
export type UserLevel = 'beginner' | 'reader' | 'booklover' | 'master';

// –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
export type SubscriptionStatus = 'active' | 'expired' | 'cancelled' | 'paused' | 'pending';

// –°—Ç–∞—Ç—É—Å –∞—Ä–µ–Ω–¥—ã
export type RentalStatus = 'active' | 'overdue' | 'returned' | 'exchanged' | 'cancelled';

// –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface User {
  id: string;
  email: string;
  name: string;
  phone?: string;
  avatar_url?: string;
  
  // –°—Ç–∞—Ç—É—Å –∏ —É—Ä–æ–≤–µ–Ω—å
  status: UserStatus;
  level: UserLevel;
  
  // –ü–æ–¥–ø–∏—Å–∫–∞
  subscription_plan?: Plan;
  subscription_status?: SubscriptionStatus;
  subscription_start_date?: string;
  subscription_end_date?: string;
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á—Ç–µ–Ω–∏—è
  books_read_count: number;
  total_rental_days: number;
  current_rentals_count: number;
  max_rentals_allowed: number;
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
  reading_preferences?: string[];
  parental_controls?: boolean;
  notifications_enabled: boolean;
  
  // –î–∞—Ç—ã
  created_at: string;
  updated_at: string;
  last_active_at?: string;
}

// –ê–∫—Ç–∏–≤–Ω–∞—è –∞—Ä–µ–Ω–¥–∞ –∫–Ω–∏–≥–∏
export interface ActiveRental {
  id: string;
  user_id: string;
  book_id: string;
  book_title: string;
  book_author: string;
  book_cover_url?: string;
  
  rented_at: string;
  return_by: string;
  exchange_count: number;
  max_exchanges: number;
  
  status: RentalStatus;
  notes?: string;
  
  // –†–∞—Å—á–µ—Ç–Ω—ã–µ –ø–æ–ª—è
  days_left: number;
  is_overdue: boolean;
  can_exchange: boolean;
}

// –ò—Å—Ç–æ—Ä–∏—è –∞—Ä–µ–Ω–¥—ã
export interface RentalHistory {
  id: string;
  user_id: string;
  book_id: string;
  book_title: string;
  book_author: string;
  
  rented_at: string;
  returned_at?: string;
  planned_return_date: string;
  
  rating?: number; // 1-5 –∑–≤–µ–∑–¥
  review?: string;
  was_purchased: boolean;
  
  total_days: number;
  exchange_count: number;
  final_status: RentalStatus;
}

// –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface UserAchievement {
  id: string;
  user_id: string;
  achievement_type: AchievementType;
  earned_at: string;
  badge_icon: string;
  title: string;
  description: string;
}

// –¢–∏–ø—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
export type AchievementType = 
  | 'first_rental'       // –ü–µ—Ä–≤–∞—è –∞—Ä–µ–Ω–¥–∞
  | 'week_reader'        // –ù–µ–¥–µ–ª—è —á—Ç–µ–Ω–∏—è
  | 'month_reader'       // –ú–µ—Å—è—Ü –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è  
  | 'genre_explorer'     // –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –∂–∞–Ω—Ä–æ–≤
  | 'speed_reader'       // –°–∫–æ—Ä–æ—Å—Ç–Ω–æ–µ —á—Ç–µ–Ω–∏–µ
  | 'loyal_subscriber'   // –í–µ—Ä–Ω—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫
  | 'reviewer'           // –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–µ—Ü–µ–Ω–∑–µ–Ω—Ç
  | 'recommender'        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å –¥—Ä—É–∑—å—è–º
  | 'collection_master'; // –ú–∞—Å—Ç–µ—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–π

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
export interface NotificationSettings {
  email_enabled: boolean;
  push_enabled: boolean;
  
  // –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  rental_reminders: boolean;        // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–æ–∑–≤—Ä–∞—Ç–µ
  new_releases: boolean;            // –ù–æ–≤–∏–Ω–∫–∏
  recommendations: boolean;         // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  subscription_expiring: boolean;   // –û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
  achievements: boolean;            // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  special_offers: boolean;          // –°–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
}

// –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface UserSubscription {
  plan: Plan;
  status: SubscriptionStatus;
  start_date: string;
  end_date: string;
  
  // –õ–∏–º–∏—Ç—ã
  max_books: number;
  rental_period_days: number;
  exchanges_per_month: number;
  
  // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
  current_rentals: number;
  exchanges_used_this_month: number;
  
  // –°—á–µ—Ç—á–∏–∫–∏
  total_books_rented: number;
  total_amount_paid: number;
  
  // –ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ
  auto_renewal: boolean;
  next_billing_date?: string;
}

// –§—É–Ω–∫—Ü–∏–∏-—Ö–µ–ª–ø–µ—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
export const getUserLevelInfo = (booksReadCount: number): { level: UserLevel; nextLevelBooks: number; progress: number } => {
  if (booksReadCount < 6) return { level: 'beginner', nextLevelBooks: 6 - booksReadCount, progress: (booksReadCount / 6) * 100 };
  if (booksReadCount < 21) return { level: 'reader', nextLevelBooks: 21 - booksReadCount, progress: ((booksReadCount - 6) / 15) * 100 };
  if (booksReadCount < 51) return { level: 'booklover', nextLevelBooks: 51 - booksReadCount, progress: ((booksReadCount - 21) / 30) * 100 };
  return { level: 'master', nextLevelBooks: 0, progress: 100 };
};

export const getLevelDisplayName = (level: UserLevel): string => {
  const names = {
    beginner: 'ü•â –ü–æ—á–∞—Ç–∫—ñ–≤–µ—Ü—å',
    reader: 'ü•à –ß–∏—Ç–∞—á', 
    booklover: 'ü•á –ö–Ω–∏–≥–æ–ª—é–±',
    master: 'üíé –ú–∞–π—Å—Ç–µ—Ä'
  };
  return names[level];
};

export const getSubscriptionDisplayName = (plan?: Plan): string => {
  if (!plan) return '–ë–µ–∑ –ø—ñ–¥–ø–∏—Å–∫–∏';
  
  const names = {
    mini: 'üåü Mini',
    maxi: 'üöÄ Maxi', 
    premium: 'üëë Premium',
    family: 'üî• Family'
  };
  return names[plan];
};

export const canRentBook = (user: User): { canRent: boolean; reason?: string } => {
  // –ì–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å
  if (user.status === 'guest') {
    return { canRent: false, reason: '–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è' };
  }
  
  // –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
  if (user.status === 'registered' && !user.subscription_plan) {
    return { canRent: false, reason: '–ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø—ñ–¥–ø–∏—Å–∫–∞ –¥–ª—è –æ—Ä–µ–Ω–¥–∏ –∫–Ω–∏–≥' };
  }
  
  // –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞
  if (user.subscription_status === 'expired' || user.subscription_status === 'cancelled') {
    return { canRent: false, reason: '–ü—ñ–¥–ø–∏—Å–∫–∞ –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—è. –ü—Ä–æ–¥–æ–≤–∂—Ç–µ –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –æ—Ä–µ–Ω–¥–∏' };
  }
  
  // –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∞—Ä–µ–Ω–¥—ã
  if (user.current_rentals_count >= user.max_rentals_allowed) {
    return { canRent: false, reason: `–î–æ—Å—è–≥–Ω—É—Ç–æ –ª—ñ–º—ñ—Ç –æ—Ä–µ–Ω–¥–∏ (${user.max_rentals_allowed} –∫–Ω–∏–≥)` };
  }
  
  return { canRent: true };
};