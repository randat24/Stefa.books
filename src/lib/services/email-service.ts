import { logger } from '@/lib/logger';

export interface EmailTemplate {
  subject: string;
  htmlBody: string;
  textBody: string;
}

export interface EmailOptions {
  to: string;
  subject: string;
  html?: string;
  text?: string;
  template?: 'temporary-password' | 'password-setup' | 'welcome';
  templateData?: Record<string, any>;
}

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
 */
export class EmailService {
  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
   */
  static async sendTemporaryPassword(
    email: string,
    name: string,
    temporaryPassword: string,
    loginUrl: string = 'https://stefa-books.com.ua/auth/login'
  ): Promise<boolean> {
    const template = this.getTemporaryPasswordTemplate({
      name,
      temporaryPassword,
      loginUrl,
      supportEmail: 'info@stefa-books.com.ua'
    });

    return this.sendEmail({
      to: email,
      subject: template.subject,
      html: template.htmlBody,
      text: template.textBody
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞—Ä–æ–ª—è
   */
  static async sendPasswordSetupLink(
    email: string,
    name: string,
    setupToken: string,
    baseUrl: string = 'https://stefa-books.com.ua'
  ): Promise<boolean> {
    const setupUrl = `${baseUrl}/auth/setup-password?token=${setupToken}`;

    const template = this.getPasswordSetupTemplate({
      name,
      setupUrl,
      supportEmail: 'info@stefa-books.com.ua'
    });

    return this.sendEmail({
      to: email,
      subject: template.subject,
      html: template.htmlBody,
      text: template.textBody
    });
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ email
   */
  private static async sendEmail(options: EmailOptions): Promise<boolean> {
    try {
      logger.info('Attempting to send email', {
        to: options.to,
        subject: options.subject,
        timestamp: new Date().toISOString()
      });

      // –í development —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ email
      if (process.env.NODE_ENV === 'development') {
        logger.info('EMAIL CONTENT (Development Mode)', {
          to: options.to,
          subject: options.subject,
          textContent: options.text,
          htmlContent: options.html ? 'HTML content available' : 'No HTML content'
        });

        console.log('üìß EMAIL SENT (Development Mode)');
        console.log('To:', options.to);
        console.log('Subject:', options.subject);
        console.log('Text Content:');
        console.log(options.text);
        console.log('---');

        return true;
      }

      // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å real email –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º
      // –ù–∞–ø—Ä–∏–º–µ—Ä: SendGrid, Mailgun, AWS SES, Resend –∏ —Ç.–¥.

      // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º success
      logger.info('Email sent successfully', {
        to: options.to,
        timestamp: new Date().toISOString()
      });

      return true;

    } catch (error) {
      logger.error('Failed to send email', {
        to: options.to,
        subject: options.subject,
        error: error instanceof Error ? error.message : String(error)
      });

      return false;
    }
  }

  /**
   * –®–∞–±–ª–æ–Ω –ø–∏—Å—å–º–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
   */
  private static getTemporaryPasswordTemplate(data: {
    name: string;
    temporaryPassword: string;
    loginUrl: string;
    supportEmail: string;
  }): EmailTemplate {
    const subject = '–í–∞—à —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è Stefa.books';

    const textBody = `
–í—ñ—Ç–∞—î–º–æ, ${data.name}!

–í–∞—à –∞–∫–∞—É–Ω—Ç –Ω–∞ Stefa.books —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫–∏.

–¢–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥—É: ${data.temporaryPassword}

–©–æ–± —É–≤—ñ–π—Ç–∏ –≤ –∞–∫–∞—É–Ω—Ç:
1. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º: ${data.loginUrl}
2. –í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É email –∞–¥—Ä–µ—Å—É —Ç–∞ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å
3. –ü—ñ—Å–ª—è –≤—Ö–æ–¥—É —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –∑–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å —É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –ø—Ä–æ—Ñ—ñ–ª—é

–ó –±–µ–∑–ø–µ–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –∑–º—ñ–Ω–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –Ω–∞ –≤–ª–∞—Å–Ω–∏–π —è–∫–æ–º–æ–≥–∞ —à–≤–∏–¥—à–µ.

–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏: ${data.supportEmail}

–ó –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è–º–∏,
–ö–æ–º–∞–Ω–¥–∞ Stefa.books
`.trim();

    const htmlBody = `
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å - Stefa.books</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #F7C948; padding: 20px; border-radius: 8px; text-align: center; margin-bottom: 30px; }
        .password-box { background: #f8f9fa; border: 2px solid #F7C948; padding: 20px; border-radius: 8px; text-align: center; margin: 20px 0; }
        .password { font-size: 24px; font-weight: bold; color: #333; font-family: 'Courier New', monospace; }
        .button { display: inline-block; background: #F7C948; color: #333; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold; margin: 20px 0; }
        .footer { border-top: 1px solid #eee; padding-top: 20px; margin-top: 30px; font-size: 14px; color: #666; }
    </style>
</head>
<body>
    <div class="header">
        <h1 style="margin: 0; color: #333;">üéâ –í—ñ—Ç–∞—î–º–æ –≤ Stefa.books!</h1>
    </div>

    <p>–ü—Ä–∏–≤—ñ—Ç, <strong>${data.name}</strong>!</p>

    <p>–í–∞—à –∞–∫–∞—É–Ω—Ç –Ω–∞ Stefa.books —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫–∏. –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –≤—Å—ñ–º–∞ –ø–µ—Ä–µ–≤–∞–≥–∞–º–∏ –Ω–∞—à–æ—ó –¥–∏—Ç—è—á–æ—ó –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏!</p>

    <div class="password-box">
        <p style="margin: 0 0 10px 0;">–í–∞—à —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å:</p>
        <div class="password">${data.temporaryPassword}</div>
    </div>

    <h3>üîê –Ø–∫ —É–≤—ñ–π—Ç–∏ –≤ –∞–∫–∞—É–Ω—Ç:</h3>
    <ol>
        <li>–ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∏–∂—á–µ</li>
        <li>–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É email –∞–¥—Ä–µ—Å—É —Ç–∞ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å</li>
        <li>–ü—ñ—Å–ª—è –≤—Ö–æ–¥—É —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –∑–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å —É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –ø—Ä–æ—Ñ—ñ–ª—é</li>
    </ol>

    <div style="text-align: center;">
        <a href="${data.loginUrl}" class="button">–£–≤—ñ–π—Ç–∏ –≤ –∞–∫–∞—É–Ω—Ç</a>
    </div>

    <p><strong>‚ö†Ô∏è –í–∞–∂–ª–∏–≤–æ:</strong> –ó –±–µ–∑–ø–µ–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –∑–º—ñ–Ω–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –Ω–∞ –≤–ª–∞—Å–Ω–∏–π —è–∫–æ–º–æ–≥–∞ —à–≤–∏–¥—à–µ.</p>

    <div class="footer">
        <p>–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏: <a href="mailto:${data.supportEmail}">${data.supportEmail}</a></p>
        <p>–ó –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è–º–∏,<br>–ö–æ–º–∞–Ω–¥–∞ Stefa.books</p>
    </div>
</body>
</html>
`.trim();

    return { subject, textBody, htmlBody };
  }

  /**
   * –®–∞–±–ª–æ–Ω –ø–∏—Å—å–º–∞ –∑—ñ —Å—Å—ã–ª–∫–æ–π –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞—Ä–æ–ª—è
   */
  private static getPasswordSetupTemplate(data: {
    name: string;
    setupUrl: string;
    supportEmail: string;
  }): EmailTemplate {
    const subject = '–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –≤–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç–∞ Stefa.books';

    const textBody = `
–í—ñ—Ç–∞—î–º–æ, ${data.name}!

–í–∞—à –∞–∫–∞—É–Ω—Ç –Ω–∞ Stefa.books —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫–∏.

–©–æ–± –∑–∞–≤–µ—Ä—à–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –≤–∞—à –≤–ª–∞—Å–Ω–∏–π –ø–∞—Ä–æ–ª—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º:
${data.setupUrl}

–ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥—ñ–π—Å–Ω–µ –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω.

–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏: ${data.supportEmail}

–ó –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è–º–∏,
–ö–æ–º–∞–Ω–¥–∞ Stefa.books
`.trim();

    const htmlBody = `
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø–∞—Ä–æ–ª—å - Stefa.books</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #F7C948; padding: 20px; border-radius: 8px; text-align: center; margin-bottom: 30px; }
        .button { display: inline-block; background: #F7C948; color: #333; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold; margin: 20px 0; }
        .footer { border-top: 1px solid #eee; padding-top: 20px; margin-top: 30px; font-size: 14px; color: #666; }
    </style>
</head>
<body>
    <div class="header">
        <h1 style="margin: 0; color: #333;">üéâ –í—ñ—Ç–∞—î–º–æ –≤ Stefa.books!</h1>
    </div>

    <p>–ü—Ä–∏–≤—ñ—Ç, <strong>${data.name}</strong>!</p>

    <p>–í–∞—à –∞–∫–∞—É–Ω—Ç –Ω–∞ Stefa.books —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫–∏. –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –≤—Å—ñ–º–∞ –ø–µ—Ä–µ–≤–∞–≥–∞–º–∏ –Ω–∞—à–æ—ó –¥–∏—Ç—è—á–æ—ó –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏!</p>

    <p>–©–æ–± –∑–∞–≤–µ—Ä—à–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –≤–∞—à –≤–ª–∞—Å–Ω–∏–π –ø–∞—Ä–æ–ª—å:</p>

    <div style="text-align: center;">
        <a href="${data.setupUrl}" class="button">–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–æ–ª—å</a>
    </div>

    <p><strong>‚ö†Ô∏è –í–∞–∂–ª–∏–≤–æ:</strong> –ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥—ñ–π—Å–Ω–µ –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω.</p>

    <div class="footer">
        <p>–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏: <a href="mailto:${data.supportEmail}">${data.supportEmail}</a></p>
        <p>–ó –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è–º–∏,<br>–ö–æ–º–∞–Ω–¥–∞ Stefa.books</p>
    </div>
</body>
</html>
`.trim();

    return { subject, textBody, htmlBody };
  }
}