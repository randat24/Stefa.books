// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –º–æ–¥–µ–ª—å Groq
const USE_FREE_MODEL = !process.env.ANTHROPIC_API_KEY || process.env.USE_FREE_MODEL === 'true';

let anthropic: any = null;
let groq: any = null;

async function initializeClients() {
  if (!USE_FREE_MODEL && !anthropic) {
    const Anthropic = (await import('@anthropic-ai/sdk')).default;
    anthropic = new Anthropic({
      apiKey: process.env.ANTHROPIC_API_KEY,
    });
  } else if (USE_FREE_MODEL && !groq) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π Groq API
    const { Groq } = await import('groq-sdk');
    groq = new Groq({
      // Groq –∏–º–µ–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ –±–µ–∑ –∫–ª—é—á–∞ –¥–ª—è –º–Ω–æ–≥–∏—Ö –º–æ–¥–µ–ª–µ–π
      apiKey: process.env.GROQ_API_KEY || 'free-tier', 
    });
  }
}

// –ú–æ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
export const AI_MODELS = {
  // Claude –º–æ–¥–µ–ª–∏ (—Ç—Ä–µ–±—É—é—Ç API –∫–ª—é—á)
  CLAUDE_OPUS_41: 'claude-opus-4-1-20250805',
  CLAUDE_OPUS_4: 'claude-opus-4-20250514', 
  CLAUDE_SONNET_4: 'claude-sonnet-4-20250514',
  CLAUDE_SONNET_35: 'claude-3-5-sonnet-20241022',
  CLAUDE_HAIKU_35: 'claude-3-5-haiku-20241022',
  
  // –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ Groq
  GROQ_LLAMA_3_70B: 'llama3-70b-8192',
  GROQ_LLAMA_3_8B: 'llama3-8b-8192',
  GROQ_MIXTRAL: 'mixtral-8x7b-32768',
  GROQ_GEMMA_7B: 'gemma-7b-it',
} as const;

export type AIModel = typeof AI_MODELS[keyof typeof AI_MODELS];

// –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
const DEFAULT_MODEL = USE_FREE_MODEL 
  ? AI_MODELS.GROQ_LLAMA_3_70B  // –õ—É—á—à–∞—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –º–æ–¥–µ–ª—å
  : (process.env.CLAUDE_DEFAULT_MODEL as AIModel || AI_MODELS.CLAUDE_OPUS_41);

const DEFAULT_MAX_TOKENS = parseInt(process.env.AI_MAX_TOKENS || '4000', 10);
const ENABLE_THINKING = process.env.AI_ENABLE_THINKING === 'true';

// –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export const CLAUDE_MODELS = {
  OPUS_41: AI_MODELS.CLAUDE_OPUS_41,
  OPUS_4: AI_MODELS.CLAUDE_OPUS_4,
  SONNET_4: AI_MODELS.CLAUDE_SONNET_4,
  SONNET_35: AI_MODELS.CLAUDE_SONNET_35,
  HAIKU_35: AI_MODELS.CLAUDE_HAIKU_35,
} as const;

export type ClaudeModel = typeof CLAUDE_MODELS[keyof typeof CLAUDE_MODELS];

export interface ClaudeRequest {
  system?: string;
  messages: Array<{
    role: 'user' | 'assistant';
    content: string;
  }>;
  model?: AIModel;
  max_tokens?: number;
  temperature?: number;
  thinking?: boolean;
}

export interface ClaudeResponse {
  content: string;
  thinking_content?: string;
  usage?: {
    input_tokens: number;
    output_tokens: number;
    thinking_tokens?: number;
  };
}

export async function callClaude({
  system,
  messages,
  model = DEFAULT_MODEL,
  max_tokens = DEFAULT_MAX_TOKENS,
  temperature = 0.1,
  thinking = false,
}: ClaudeRequest): Promise<ClaudeResponse> {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ
    await initializeClients();
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –º–æ–¥–µ–ª—å
    const isGroqModel = USE_FREE_MODEL || model.includes('llama') || model.includes('mixtral') || model.includes('gemma');

    if (isGroqModel && groq) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π Groq API
      const groqModel = model.includes('llama') || model.includes('mixtral') || model.includes('gemma') 
        ? model 
        : AI_MODELS.GROQ_LLAMA_3_70B;

      const response = await groq.chat.completions.create({
        messages: [
          ...(system ? [{ role: 'system', content: system }] : []),
          ...messages.map((msg: any) => ({
            role: msg.role,
            content: msg.content
          }))
        ],
        model: groqModel,
        max_tokens,
        temperature,
      });

      const result: ClaudeResponse = {
        content: response.choices[0]?.message?.content || '',
        usage: {
          input_tokens: response.usage?.prompt_tokens || 0,
          output_tokens: response.usage?.completion_tokens || 0,
        },
      };

      return result;

    } else if (!USE_FREE_MODEL && anthropic) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Claude API (—Ç—Ä–µ–±—É–µ—Ç –∫–ª—é—á)
      const requestBody: any = {
        model,
        max_tokens,
        temperature,
        system,
        messages,
      };

      // Enable thinking mode for Opus models if requested
      if (thinking && (model === CLAUDE_MODELS.OPUS_41 || model === CLAUDE_MODELS.OPUS_4)) {
        requestBody.thinking = true;
        requestBody.max_thinking_tokens = ENABLE_THINKING ? 64000 : undefined;
      }

      const response = await anthropic.messages.create(requestBody);

      if (response.content[0].type === 'text') {
        const result: ClaudeResponse = {
          content: response.content[0].text,
          usage: {
            input_tokens: response.usage.input_tokens,
            output_tokens: response.usage.output_tokens,
          },
        };

        // Handle thinking content if present
        if ('thinking' in response && response.thinking) {
          result.thinking_content = String(response.thinking);
          if (response.usage && 'thinking_tokens' in response.usage) {
            result.usage!.thinking_tokens = (response.usage as any).thinking_tokens;
          }
        }

        return result;
      }

      throw new Error('Unexpected response format from Claude API');

    } else {
      // Fallback: —Å–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      console.warn('ü§ñ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI –æ—Ç–≤–µ—Ç (–Ω–µ—Ç API –∫–ª—é—á–µ–π)');
      
      const simulatedResponse: ClaudeResponse = {
        content: `–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Å–∏–º—É–ª–æ–≤–∞–Ω–∏–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å AI –º–æ–¥–µ–ª—ñ. 

–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "${messages[messages.length - 1]?.content || '–ù–µ–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'}"

üìù –î–ª—è –ø–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ:
- –î–æ–¥–∞–π—Ç–µ ANTHROPIC_API_KEY –¥–ª—è Claude
- –ê–±–æ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –∫–ª—é—á Groq –Ω–∞ https://console.groq.com

üöÄ –ü–æ—Ç–æ—á–Ω–∞ –º–æ–¥–µ–ª—å: ${model} (—Å–∏–º—É–ª—è—Ü—ñ—è)
üìä –°–∏—Å—Ç–µ–º–∞: ${system || '–ó–∞–≥–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫'}`,
        usage: {
          input_tokens: 50,
          output_tokens: 150,
        },
      };

      return simulatedResponse;
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ AI API:', error);
    
    // Fallback –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    return {
      content: `‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ AI API: ${error instanceof Error ? error.message : 'Unknown error'}

üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:
1. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –∑'—î–¥–Ω–∞–Ω–Ω—è
2. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ API –∫–ª—é—á—ñ
3. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ

–ú–æ–¥–µ–ª—å: ${model}
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –º–æ–¥–µ–ª—å: ${USE_FREE_MODEL ? '–¢–∞–∫' : '–ù—ñ'}`,
      usage: {
        input_tokens: 0,
        output_tokens: 0,
      },
    };
  }
}

export async function generateText(
  prompt: string,
  systemPrompt?: string,
  model: AIModel = DEFAULT_MODEL
): Promise<string> {
  const response = await callClaude({
    system: systemPrompt,
    messages: [{ role: 'user', content: prompt }],
    model,
  });
  
  return response.content;
}

export async function analyzeContent(
  content: string,
  analysisType: 'summary' | 'translate' | 'improve' | 'analyze' = 'analyze',
  model: AIModel = DEFAULT_MODEL
): Promise<string> {
  const systemPrompts = {
    summary: '–°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º —è–∑—ã–∫–µ.',
    translate: '–ü–µ—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π —è–∑—ã–∫, —Å–æ—Ö—Ä–∞–Ω—è—è —Å—Ç–∏–ª—å –∏ —Å–º—ã—Å–ª.',
    improve: '–£–ª—É—á—à–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∏—Å–ø—Ä–∞–≤–∏–≤ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏ —Å—Ç–∏–ª—å.',
    analyze: '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –¥–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.',
  };

  return generateText(content, systemPrompts[analysisType], model);
}

// Specialized functions for Opus 4.1
export async function callClaudeOpus41({
  system,
  messages,
  max_tokens = 32000,
  temperature = 0.1,
  thinking = false,
}: Omit<ClaudeRequest, 'model'>): Promise<ClaudeResponse> {
  return callClaude({
    system,
    messages,
    model: CLAUDE_MODELS.OPUS_41,
    max_tokens,
    temperature,
    thinking,
  });
}

export async function generateWithThinking(
  prompt: string,
  systemPrompt?: string,
  maxTokens = 16000
): Promise<{ content: string; thinking?: string; usage?: ClaudeResponse['usage'] }> {
  const response = await callClaudeOpus41({
    system: systemPrompt,
    messages: [{ role: 'user', content: prompt }],
    max_tokens: maxTokens,
    thinking: true,
  });

  return {
    content: response.content,
    thinking: response.thinking_content,
    usage: response.usage,
  };
}

export async function analyzeCodebase(
  codeContent: string,
  analysisType: 'refactor' | 'optimize' | 'review' | 'debug' = 'review'
): Promise<string> {
  const systemPrompts = {
    refactor: '–¢—ã –µ–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥—É –∫–æ–¥—É. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç–∏. –ò—Å–ø–æ–ª—å–∑—É–π –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ TypeScript –∏ React.',
    optimize: '–¢—ã –µ–∫—Å–ø–µ—Ä—Ç –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–¥ –∏ –Ω–∞–π–¥–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞.',
    review: '–¢—ã Senior —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫. –ü—Ä–æ–≤–µ–¥–∏ –ø–æ–ª–Ω—ã–π –∫–æ–¥-—Ä–µ–≤—å—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞. –ù–∞–π–¥–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–∞–≥–∏, –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –Ω–∞—Ä—É—à–µ–Ω–∏—è –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —É–ª—É—á—à–µ–Ω–∏—è.',
    debug: '–¢—ã –µ–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—Ç–ª–∞–¥–∫–µ. –ù–∞–π–¥–∏ –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–∞–≥–∏ –≤ –∫–æ–¥–µ. –û–±—ä—è—Å–Ω–∏ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —Ä–µ—à–µ–Ω–∏—è.',
  };

  const response = await callClaudeOpus41({
    system: systemPrompts[analysisType],
    messages: [{ role: 'user', content: codeContent }],
    thinking: true,
    max_tokens: 24000,
  });

  return response.content;
}

export async function refactorCode(
  codeContent: string,
  refactorGoal: string,
  preserveLogic = true
): Promise<{ refactoredCode: string; explanation: string; thinking?: string }> {
  const systemPrompt = `
–¢—ã –µ–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥—É TypeScript/React –∫–æ–¥–∞. 
–¶–µ–ª—å —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞: ${refactorGoal}
${preserveLogic ? '–í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω–∏ –≤—Å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.' : ''}

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å:
1. –û—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
2. –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º —è–∑—ã–∫–µ
3. –°–ø–∏—Å–æ–∫ —É–ª—É—á—à–µ–Ω–∏–π

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
## –û—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
\`\`\`typescript
// –∫–æ–¥ –∑–¥–µ—Å—å
\`\`\`

## –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
// –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∑–¥–µ—Å—å

## –°–ø–∏—Å–æ–∫ —É–ª—É—á—à–µ–Ω–∏–π
// —Å–ø–∏—Å–æ–∫ —É–ª—É—á—à–µ–Ω–∏–π
  `.trim();

  const response = await generateWithThinking(
    `–û—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏ —ç—Ç–æ—Ç –∫–æ–¥:\n\n${codeContent}`,
    systemPrompt,
    28000
  );

  // Parse response to extract code and explanation
  const content = response.content;
  const codeMatch = content.match(/```(?:typescript|ts|tsx)\n([\s\S]*?)\n```/);
  const explanationMatch = content.match(/## –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n([\s\S]*?)(?=\n## |$)/);

  return {
    refactoredCode: codeMatch?.[1] || content,
    explanation: explanationMatch?.[1]?.trim() || content,
    thinking: response.thinking,
  };
}

export async function generateBookRecommendations(
  userPreferences: string,
  availableBooks: string,
  maxRecommendations = 5
): Promise<string> {
  const systemPrompt = `
–¢—ã —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫ –¥–∏—Ç—è—á–æ—ó –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ Stefa.Books. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Ä–µ–∫–æ–º–µ–Ω–¥—É–≤–∞—Ç–∏ –∫–Ω–∏–≥–∏ –¥—ñ—Ç—è–º —Ç–∞ —ó—Ö –±–∞—Ç—å–∫–∞–º.
–ê–Ω–∞–ª—ñ–∑—É–π —É–ø–æ–¥–æ–±–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–Ω–∏–≥–∏, —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó.
–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é –≤ –¥—Ä—É–∂–Ω—å–æ–º—É —Ç–æ–Ω—ñ.
  `.trim();

  return generateText(
    `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —à—É–∫–∞—î: ${userPreferences}\n\n–î–æ—Å—Ç—É–ø–Ω—ñ –∫–Ω–∏–≥–∏:\n${availableBooks}\n\n–°–∫—ñ–ª—å–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π: ${maxRecommendations}`,
    systemPrompt,
    CLAUDE_MODELS.OPUS_41
  );
}

export const claude = {
  // Core functions
  callClaude,
  generateText,
  analyzeContent,
  
  // Opus 4.1 specific functions
  callClaudeOpus41,
  generateWithThinking,
  analyzeCodebase,
  refactorCode,
  
  // Business logic functions
  generateBookRecommendations,
  
  // Constants
  MODELS: CLAUDE_MODELS,
};