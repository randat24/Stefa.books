#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç loading="lazy" –∫–æ –≤—Å–µ–º —Ç—è–∂–µ–ª—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
 */

const fs = require('fs');
const path = require('path');
const glob = require('glob');

console.log('üöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ç—è–∂–µ–ª—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...\n');

// –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
const patterns = [
  'src/app/**/*.tsx',
  'src/components/**/*.tsx',
  'src/app/admin/**/*.tsx',
  'src/app/catalog/**/*.tsx',
  'src/app/books/**/*.tsx',
];

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å
const heavyComponents = [
  'BookCard',
  'BookGrid',
  'BookList',
  'Catalog',
  'Categories',
  'FAQ',
  'SocialProof',
  'PlansLite',
  'SubscribeFormHome',
  'ContactLocation',
  'FinalCTA',
  'AnalyticsDashboard',
  'BooksTable',
  'UsersTable',
  'RentalsTable',
  'AddBookDialog',
  'EditBookDialog',
  'SubscribeModal',
  'BookPreviewModal',
  'RentalModal',
  'RentalForm',
  'ContactForm',
  'SearchResults',
  'SearchFilters',
  'HeaderSearch',
  'BookRecommendations',
  'RecentViews',
  'RelatedBooksSection',
  'BookDetails',
];

// –°—Ç—Ä–∞–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å
const heavyPages = [
  'admin',
  'catalog',
  'books',
  'analytics',
  'rentals',
  'users',
  'dashboard',
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω—É–∂–Ω–æ –ª–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª
function shouldOptimizeFile(filePath) {
  const content = fs.readFileSync(filePath, 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ñ–∞–π–ª —Ç—è–∂–µ–ª—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  const hasHeavyComponents = heavyComponents.some(component => 
    content.includes(component) && !content.includes('lazy')
  );
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Ç—è–∂–µ–ª–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
  const isHeavyPage = heavyPages.some(page => 
    filePath.includes(`/${page}/`) || filePath.includes(`/${page}.tsx`)
  );
  
  return hasHeavyComponents || isHeavyPage;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞
function optimizeFile(filePath) {
  let content = fs.readFileSync(filePath, 'utf8');
  let modified = false;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
  if (!content.includes('useLazyLoading') && !content.includes('LazyLoad')) {
    const importMatch = content.match(/import.*from ['"]react['"];?/);
    if (importMatch) {
      content = content.replace(
        importMatch[0],
        `${importMatch[0]}\nimport { useLazyLoading } from '@/hooks/useLazyLoading';\nimport { LazyLoad } from '@/components/ui/LazyLoad';`
      );
      modified = true;
    }
  }
  
  // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ç—è–∂–µ–ª—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  heavyComponents.forEach(component => {
    const componentRegex = new RegExp(`<${component}([^>]*)>`, 'g');
    if (content.match(componentRegex)) {
      content = content.replace(
        componentRegex,
        `<LazyLoad threshold={0.1} rootMargin="50px" placeholder={<div className="h-32 bg-slate-100 animate-pulse rounded-lg" />}>\n        <${component}$1>`
      );
      modified = true;
    }
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º data-lazy –∞—Ç—Ä–∏–±—É—Ç—ã
  content = content.replace(
    /<div className="[^"]*section[^"]*">/g,
    '<div className="section" data-lazy="true">'
  );
  
  // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  content = content.replace(
    /<Image([^>]*)>/g,
    '<Image$1 loading="lazy" />'
  );
  
  if (modified) {
    fs.writeFileSync(filePath, content);
    return true;
  }
  
  return false;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  let totalFiles = 0;
  let optimizedFiles = 0;
  
  patterns.forEach(pattern => {
    const files = glob.sync(pattern, { cwd: process.cwd() });
    
    files.forEach(file => {
      totalFiles++;
      
      if (shouldOptimizeFile(file)) {
        console.log(`üîß –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º: ${file}`);
        
        if (optimizeFile(file)) {
          optimizedFiles++;
          console.log(`‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω: ${file}`);
        } else {
          console.log(`‚ö†Ô∏è  –ù–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π: ${file}`);
        }
      }
    });
  });
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:`);
  console.log(`   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${totalFiles}`);
  console.log(`   –§–∞–π–ª–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${optimizedFiles}`);
  console.log(`   –§–∞–π–ª–æ–≤ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: ${totalFiles - optimizedFiles}`);
  
  if (optimizedFiles > 0) {
    console.log(`\nüéâ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–∏–º–µ–Ω–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —É–ª—É—á—à–µ–Ω–∏—è:`);
    console.log(`   ‚Ä¢ –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`);
    console.log(`   ‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å loading="lazy"`);
    console.log(`   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã data-lazy –∞—Ç—Ä–∏–±—É—Ç—ã`);
    console.log(`   ‚Ä¢ –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è —Ö—É–∫–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏`);
  } else {
    console.log(`\n‚ú® –í—Å–µ —Ñ–∞–π–ª—ã —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
main();
