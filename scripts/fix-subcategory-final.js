const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function fixSubcategoryFinal() {
  console.log('üîß –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ subcategory...');
  
  try {
    // 1. –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º RLS
    console.log('1. –û—Ç–∫–ª—é—á–∞–µ–º RLS...');
    await supabase.rpc('exec_sql', {
      sql_query: 'ALTER TABLE books DISABLE ROW LEVEL SECURITY;'
    });
    
    // 2. –û–±–Ω–æ–≤–ª—è–µ–º subcategory
    console.log('2. –û–±–Ω–æ–≤–ª—è–µ–º subcategory...');
    await supabase.rpc('exec_sql', {
      sql_query: `
        UPDATE books SET 
          subcategory = '–°–∫–∞–∑–∫–∏'
        WHERE subcategory IS NULL;
      `
    });
    
    // 3. –í–∫–ª—é—á–∞–µ–º RLS –æ–±—Ä–∞—Ç–Ω–æ
    console.log('3. –í–∫–ª—é—á–∞–µ–º RLS...');
    await supabase.rpc('exec_sql', {
      sql_query: 'ALTER TABLE books ENABLE ROW LEVEL SECURITY;'
    });
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    const { data: books, error: checkError } = await supabase
      .from('books')
      .select('id, title, author, category, subcategory')
      .limit(5);
    
    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', checkError);
    } else {
      console.log('üìö –†–µ–∑—É–ª—å—Ç–∞—Ç:');
      books.forEach(book => {
        console.log(`   - "${book.title}" by ${book.author} [${book.category} - ${book.subcategory}]`);
      });
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    const { data: stats, error: statsError } = await supabase.rpc('exec_sql', {
      sql_query: `
        SELECT 
          COUNT(*) as total_books,
          COUNT(DISTINCT category) as unique_categories,
          COUNT(DISTINCT author) as unique_authors,
          COUNT(CASE WHEN subcategory IS NOT NULL THEN 1 END) as books_with_subcategory
        FROM books;
      `
    });
    
    console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', stats);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

fixSubcategoryFinal();
