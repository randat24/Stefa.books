#!/usr/bin/env node

/**
 * Build script with pages-manifest.json fix
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º pages-manifest.json –≤ Next.js 15 App Router
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîß Starting build with pages-manifest.json fix...');

// 1. –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è .next/server —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
const serverDir = path.join(process.cwd(), '.next', 'server');
const pagesManifestPath = path.join(serverDir, 'pages-manifest.json');

// 2. –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π pages-manifest.json –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
function ensurePagesManifest() {
  if (!fs.existsSync(serverDir)) {
    fs.mkdirSync(serverDir, { recursive: true });
  }
  
  if (!fs.existsSync(pagesManifestPath)) {
    const manifest = {
      "/_app": "pages/_app.js",
      "/_error": "pages/_error.js",
      "/_document": "pages/_document.js",
      "/404": "pages/404.html"
    };
    fs.writeFileSync(pagesManifestPath, JSON.stringify(manifest, null, 2));
    console.log('‚úÖ Created pages-manifest.json');
  }
}

// 3. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
try {
  // –£–±–∏—Ä–∞–µ–º NODE_ENV –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
  delete process.env.NODE_ENV;
  
  console.log('üì¶ Running Next.js build...');
  
  // –°–æ–∑–¥–∞–µ–º manifest –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π
  ensurePagesManifest();
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
  execSync('pnpm run build', { 
    stdio: 'inherit',
    env: { 
      ...process.env,
      NODE_OPTIONS: '--max-old-space-size=4096'
    }
  });
  
  console.log('‚úÖ Build completed successfully!');
  
} catch (error) {
  console.error('‚ùå Build failed:', error.message);
  
  // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –≤—Å–µ –µ—â–µ —Å–≤—è–∑–∞–Ω–∞ —Å pages-manifest, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑
  if (error.message.includes('pages-manifest.json')) {
    console.log('üîÑ Retrying with pages-manifest fix...');
    ensurePagesManifest();
    
    try {
      execSync('pnpm run build', { 
        stdio: 'inherit',
        env: { 
          ...process.env,
          NODE_OPTIONS: '--max-old-space-size=4096'
        }
      });
      console.log('‚úÖ Build completed on retry!');
    } catch (retryError) {
      console.error('‚ùå Build failed on retry:', retryError.message);
      process.exit(1);
    }
  } else {
    process.exit(1);
  }
}