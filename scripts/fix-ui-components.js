const fs = require('fs');
const path = require('path');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
function findFiles(dir, pattern) {
  const files = [];
  const items = fs.readdirSync(dir);
  
  for (const item of items) {
    const fullPath = path.join(dir, item);
    const stat = fs.statSync(fullPath);
    
    if (stat.isDirectory() && !item.startsWith('.') && item !== 'node_modules' && item !== 'test-pages-backup') {
      files.push(...findFiles(fullPath, pattern));
    } else if (stat.isFile() && pattern.test(item)) {
      files.push(fullPath);
    }
  }
  
  return files;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
function fixFile(filePath) {
  let content = fs.readFileSync(filePath, 'utf8');
  let modified = false;

  // 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º forwardRef - –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –æ–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å ref –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
  if (content.includes('React.forwardRef') || content.includes('forwardRef')) {
    // –ó–∞–º–µ–Ω—è–µ–º React.forwardRef –Ω–∞ –æ–±—ã—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    content = content.replace(/React\.forwardRef<[^>]*>\(/g, '(');
    content = content.replace(/forwardRef<[^>]*>\(/g, '(');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã
    content = content.replace(/React\.ElementRef/g, 'React.ElementRef');
    content = content.replace(/React\.ComponentPropsWithoutRef/g, 'React.ComponentPropsWithoutRef');
    content = content.replace(/React\.HTMLAttributes/g, 'React.HTMLAttributes');
    content = content.replace(/React\.ThHTMLAttributes/g, 'React.ThHTMLAttributes');
    content = content.replace(/React\.TdHTMLAttributes/g, 'React.TdHTMLAttributes');
    content = content.replace(/React\.TextareaHTMLAttributes/g, 'React.TextareaHTMLAttributes');
    
    modified = true;
  }

  // 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º JSX —ç–ª–µ–º–µ–Ω—Ç—ã
  content = content.replace(/<tfoot/g, '<tfoot');
  content = content.replace(/<caption/g, '<caption');

  // 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è lucide-react –∏–∫–æ–Ω–æ–∫
  content = content.replace(/FC<IconProps>/g, 'React.FC<React.SVGProps<SVGSVGElement>>');
  content = content.replace(/FC<ImageProps>/g, 'React.FC<React.ImgHTMLAttributes<HTMLImageElement>>');
  content = content.replace(/FC<SelectProps>/g, 'React.FC<any>');

  // 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º displayName
  content = content.replace(/\.displayName\s*=\s*"[^"]*"/g, '');

  if (modified) {
    fs.writeFileSync(filePath, content);
    console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${filePath}`);
  }
  
  return modified;
}

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const uiFiles = findFiles('src/components/ui', /\.(ts|tsx)$/);
let fixedCount = 0;

console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${uiFiles.length} UI —Ñ–∞–π–ª–æ–≤`);

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
for (const file of uiFiles) {
  try {
    if (fixFile(file)) {
      fixedCount++;
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ ${file}:`, error.message);
  }
}

console.log(`\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixedCount} —Ñ–∞–π–ª–æ–≤`);
