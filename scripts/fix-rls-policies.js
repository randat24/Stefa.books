const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function fixRLSPolicies() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏...');
  
  try {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
    console.log('1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏...');
    await supabase.rpc('exec_sql', {
      sql_query: 'DROP POLICY IF EXISTS "Books are viewable by everyone" ON books;'
    });
    
    await supabase.rpc('exec_sql', {
      sql_query: 'DROP POLICY IF EXISTS "Books are editable by admins" ON books;'
    });
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑ —Å—Å—ã–ª–æ–∫ –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log('2. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏...');
    
    // –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è - –≤—Å–µ –º–æ–≥—É—Ç —á–∏—Ç–∞—Ç—å
    await supabase.rpc('exec_sql', {
      sql_query: `
        CREATE POLICY "Books are viewable by everyone" ON books
        FOR SELECT USING (true);
      `
    });
    
    // –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ - —Ç–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    await supabase.rpc('exec_sql', {
      sql_query: `
        CREATE POLICY "Books are editable by authenticated users" ON books
        FOR ALL USING (auth.uid() IS NOT NULL);
      `
    });
    
    console.log('‚úÖ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ subcategory
    console.log('3. –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ subcategory...');
    await supabase.rpc('exec_sql', {
      sql_query: `
        UPDATE books SET 
          subcategory = '–°–∫–∞–∑–∫–∏'
        WHERE subcategory IS NULL;
      `
    });
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ subcategory –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    const { data: books, error } = await supabase
      .from('books')
      .select('id, title, author, category, subcategory')
      .limit(3);
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error);
    } else {
      console.log('üìö –ü—Ä–∏–º–µ—Ä—ã –∫–Ω–∏–≥ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
      books.forEach(book => {
        console.log(`   - "${book.title}" by ${book.author} [${book.category} - ${book.subcategory}]`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ RLS –ø–æ–ª–∏—Ç–∏–∫:', error);
  }
}

fixRLSPolicies();
