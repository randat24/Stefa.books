#!/usr/bin/env node

/**
 * –ü–†–û–í–ï–†–ö–ê –ö–ù–ò–ì–ò BOOK87
 */

// eslint-disable-next-line @typescript-eslint/no-var-requires
const { google } = require('googleapis');
// eslint-disable-next-line @typescript-eslint/no-var-requires
require('dotenv').config({ path: '.env.local' });

const auth = new google.auth.GoogleAuth({
  keyFile: process.env.GOOGLE_APPLICATION_CREDENTIALS,
  scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly']
});

const sheets = google.sheets({ version: 'v4', auth });

async function checkBook87() {
  try {
    const response = await sheets.spreadsheets.values.get({
      spreadsheetId: process.env.GOOGLE_SPREADSHEET_ID,
      range: '–ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥!A:Z'
    });
    
    const rows = response.data.values;
    if (!rows || rows.length === 0) {
      console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ');
      return;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const dataRows = rows.slice(1);
    
    console.log('üîç –ò—â–µ–º –∫–Ω–∏–≥—É BOOK87:');
    
    dataRows.forEach((row, index) => {
      const code = row[0] || '';
      if (code === 'BOOK87') {
        const title = row[1] || '';
        const coverUrl = row[10] || '';
        const coverFilename = row[row.length - 1] || '';
        
        console.log(`üìñ ${code}: ${title}`);
        console.log(`   URL –æ–±–ª–æ–∂–∫–∏: ${coverUrl}`);
        console.log(`   –ò–º—è —Ñ–∞–π–ª–∞: ${coverFilename}`);
        console.log(`   –°—Ç—Ä–æ–∫–∞: ${index + 2}`);
      }
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
  }
}

checkBook87();
