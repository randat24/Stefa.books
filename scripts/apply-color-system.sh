#!/usr/bin/env bash
set -euo pipefail

# Stefa.Books Color System Migration Script
# –ú–∏–≥—Ä–∏—Ä—É–µ—Ç gray-* –∫–ª–∞—Å—Å—ã –Ω–∞ neutral-* —Å–∏—Å—Ç–µ–º—É

ROOT_DIR="$(cd "$(dirname "$0")/.." && pwd)"
SRC_DIR="$ROOT_DIR/src"
BACKUP_DIR="$ROOT_DIR/src_backup_$(date +%Y%m%d_%H%M%S)"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

info()  { printf "${BLUE}[INFO]${NC} %s\n" "$*"; }
success(){ printf "${GREEN}[DONE]${NC} %s\n" "$*"; }
warn()  { printf "${YELLOW}[WARN]${NC} %s\n" "$*"; }
error() { printf "${RED}[ERROR]${NC} %s\n" "$*"; }

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
DRY_RUN="${DRY_RUN:-0}"
SED_INPLACE=("-i")
# macOS BSD sed compatibility
if ! sed --version >/dev/null 2>&1; then 
    SED_INPLACE=("-i" "")
fi

info "üé® Stefa.Books Color System Migration"
info "üìÅ Scanning files under: $SRC_DIR"
info "üîç DRY_RUN mode: $([ "$DRY_RUN" = "1" ] && echo "ON" || echo "OFF")"

# 1) Backup
if [[ "$DRY_RUN" != "1" ]]; then
    info "üì¶ Creating backup..."
    cp -R "$SRC_DIR" "$BACKUP_DIR"
    success "‚úÖ Backup created: $BACKUP_DIR"
else
    warn "üîç DRY_RUN is ON ‚Äî no files will be modified"
fi

# 2) –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ –º–∏–≥—Ä–∞—Ü–∏–∏
info "üìä Analyzing current color usage..."

GRAY_COUNT=$(grep -r "gray-[0-9]" "$SRC_DIR" --include="*.tsx" --include="*.ts" --include="*.jsx" --include="*.js" | wc -l | tr -d ' ')
NEUTRAL_COUNT=$(grep -r "neutral-[0-9]" "$SRC_DIR" --include="*.tsx" --include="*.ts" --include="*.jsx" --include="*.js" | wc -l | tr -d ' ')
BRAND_OLD_COUNT=$(grep -r "brand-yellow" "$SRC_DIR" --include="*.tsx" --include="*.ts" --include="*.jsx" --include="*.js" | wc -l | tr -d ' ')

info "üìà Current state:"
info "   - Files with gray-* classes: $GRAY_COUNT"
info "   - Files with neutral-* classes: $NEUTRAL_COUNT"
info "   - Files with old brand-yellow: $BRAND_OLD_COUNT"

# 3) –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∑–∞–º–µ–Ω—ã
declare -a patterns=(
    # –û—Å–Ω–æ–≤–Ω—ã–µ gray-* ‚Üí neutral-* –∑–∞–º–µ–Ω—ã
    's/text-gray-900/text-neutral-900/g'
    's/text-gray-800/text-neutral-800/g'
    's/text-gray-700/text-neutral-700/g'
    's/text-gray-600/text-neutral-600/g'
    's/text-gray-500/text-neutral-500/g'
    's/text-gray-400/text-neutral-400/g'
    's/text-gray-300/text-neutral-300/g'
    's/text-gray-200/text-neutral-200/g'
    's/text-gray-100/text-neutral-100/g'
    's/text-gray-50/text-neutral-50/g'
    
    's/bg-gray-900/bg-neutral-900/g'
    's/bg-gray-800/bg-neutral-800/g'
    's/bg-gray-700/bg-neutral-700/g'
    's/bg-gray-600/bg-neutral-600/g'
    's/bg-gray-500/bg-neutral-500/g'
    's/bg-gray-400/bg-neutral-400/g'
    's/bg-gray-300/bg-neutral-300/g'
    's/bg-gray-200/bg-neutral-200/g'
    's/bg-gray-100/bg-neutral-100/g'
    's/bg-gray-50/bg-neutral-50/g'
    
    's/border-gray-900/border-neutral-900/g'
    's/border-gray-800/border-neutral-800/g'
    's/border-gray-700/border-neutral-700/g'
    's/border-gray-600/border-neutral-600/g'
    's/border-gray-500/border-neutral-500/g'
    's/border-gray-400/border-neutral-400/g'
    's/border-gray-300/border-neutral-300/g'
    's/border-gray-200/border-neutral-200/g'
    's/border-gray-100/border-neutral-100/g'
    's/border-gray-50/border-neutral-50/g'
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ gray-* –∑–∞–º–µ–Ω—ã
    's/from-gray-900/from-neutral-900/g'
    's/from-gray-800/from-neutral-800/g'
    's/from-gray-700/from-neutral-700/g'
    's/from-gray-600/from-neutral-600/g'
    's/from-gray-500/from-neutral-500/g'
    's/from-gray-400/from-neutral-400/g'
    's/from-gray-300/from-neutral-300/g'
    's/from-gray-200/from-neutral-200/g'
    's/from-gray-100/from-neutral-100/g'
    's/from-gray-50/from-neutral-50/g'
    
    's/to-gray-900/to-neutral-900/g'
    's/to-gray-800/to-neutral-800/g'
    's/to-gray-700/to-neutral-700/g'
    's/to-gray-600/to-neutral-600/g'
    's/to-gray-500/to-neutral-500/g'
    's/to-gray-400/to-neutral-400/g'
    's/to-gray-300/to-neutral-300/g'
    's/to-gray-200/to-neutral-200/g'
    's/to-gray-100/to-neutral-100/g'
    's/to-gray-50/to-neutral-50/g'
    
    # –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ brand-* –∑–∞–º–µ–Ω—ã
    's/brand-yellow/accent/g'
    's/brand-yellow-light/accent-100/g'
    's/brand-yellow-dark/accent-700/g'
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏
    's/bg-white/bg-neutral-0/g'
    's/text-white/text-neutral-0/g'
    's/border-white/border-neutral-0/g'
)

# 4) –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∑–∞–º–µ–Ω
apply_pattern() {
    local expr="$1"
    local pattern_name="${expr%% *}"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ (—É–±–∏—Ä–∞–µ–º s/ –∏ /g)
    local search_pattern=$(echo "$expr" | sed 's/s\///g' | sed 's/\/.*$//g')
    
    if [[ "$DRY_RUN" == "1" ]]; then
        # DRY RUN: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ
        local matches=$(grep -r "$search_pattern" "$SRC_DIR" --include="*.tsx" --include="*.ts" --include="*.jsx" --include="*.js" 2>/dev/null | wc -l | tr -d ' ')
        if [ "$matches" -gt 0 ]; then
            info "   üîç $pattern_name: $matches occurrences would be replaced"
        fi
    else
        # –†–µ–∞–ª—å–Ω–∞—è –∑–∞–º–µ–Ω–∞
        local matches=$(grep -r "$search_pattern" "$SRC_DIR" --include="*.tsx" --include="*.ts" --include="*.jsx" --include="*.js" 2>/dev/null | wc -l | tr -d ' ')
        if [ "$matches" -gt 0 ]; then
            find "$SRC_DIR" -type f \( -name '*.tsx' -o -name '*.ts' -o -name '*.jsx' -o -name '*.js' \) \
                -print0 | xargs -0 sed "${SED_INPLACE[@]}" "$expr"
            success "   ‚úÖ $pattern_name: $matches occurrences replaced"
        fi
    fi
}

# 5) –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
info "üîÑ Applying color system patterns..."

for pattern in "${patterns[@]}"; do
    apply_pattern "$pattern"
done

# 6) –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
if [[ "$DRY_RUN" != "1" ]]; then
    info "üìä Post-migration analysis..."
    
    GRAY_COUNT_AFTER=$(grep -r "gray-[0-9]" "$SRC_DIR" --include="*.tsx" --include="*.ts" --include="*.jsx" --include="*.js" 2>/dev/null | wc -l | tr -d ' ')
    NEUTRAL_COUNT_AFTER=$(grep -r "neutral-[0-9]" "$SRC_DIR" --include="*.tsx" --include="*.ts" --include="*.jsx" --include="*.js" 2>/dev/null | wc -l | tr -d ' ')
    BRAND_OLD_COUNT_AFTER=$(grep -r "brand-yellow" "$SRC_DIR" --include="*.tsx" --include="*.ts" --include="*.jsx" --include="*.js" 2>/dev/null | wc -l | tr -d ' ')
    
    info "üìà After migration:"
    info "   - Files with gray-* classes: $GRAY_COUNT_AFTER (was $GRAY_COUNT)"
    info "   - Files with neutral-* classes: $NEUTRAL_COUNT_AFTER (was $NEUTRAL_COUNT)"
    info "   - Files with old brand-yellow: $BRAND_OLD_COUNT_AFTER (was $BRAND_OLD_COUNT)"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏
    if [ "$GRAY_COUNT_AFTER" -lt "$GRAY_COUNT" ]; then
        success "‚úÖ Migration successful! Reduced gray-* usage by $((GRAY_COUNT - GRAY_COUNT_AFTER)) files"
    else
        warn "‚ö†Ô∏è  No gray-* classes were replaced"
    fi
    
    if [ "$NEUTRAL_COUNT_AFTER" -gt "$NEUTRAL_COUNT" ]; then
        success "‚úÖ Neutral-* usage increased by $((NEUTRAL_COUNT_AFTER - NEUTRAL_COUNT)) files"
    fi
fi

# 7) –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
if [[ "$DRY_RUN" == "1" ]]; then
    info "üéØ Next steps:"
    info "   1. Review the changes above"
    info "   2. Run: DRY_RUN= bash $0"
    info "   3. Test: pnpm type-check && pnpm lint && pnpm build"
    info "   4. Visual check: pnpm dev"
else
    info "üéØ Next steps:"
    info "   1. Test: pnpm type-check && pnpm lint && pnpm build"
    info "   2. Visual check: pnpm dev"
    info "   3. Check accessibility and contrast"
    info "   4. Commit changes: git add . && git commit -m 'feat(ui): migrate to neutral color system'"
fi

success "üéâ Color system migration completed!"