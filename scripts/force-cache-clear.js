#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å—é Ctrl+Shift+R
 */

const fs = require('fs');
const path = require('path');

console.log('üßπ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã Ctrl+Shift+R...');

// 1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π Build ID —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
const generateBuildId = () => {
  const now = new Date();
  return `${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}-${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}${String(now.getSeconds()).padStart(2, '0')}`;
};

const newBuildId = generateBuildId();

// 2. –û–±–Ω–æ–≤–ª—è–µ–º next.config.js —Å –Ω–æ–≤—ã–º build ID
const nextConfigPath = path.join(process.cwd(), 'next.config.js');
if (fs.existsSync(nextConfigPath)) {
  let config = fs.readFileSync(nextConfigPath, 'utf8');
  
  // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π build ID –Ω–∞ –Ω–æ–≤—ã–π
  config = config.replace(
    /const BUILD_ID = .*?;/,
    `const BUILD_ID = '${newBuildId}';`
  );
  
  fs.writeFileSync(nextConfigPath, config);
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω BUILD_ID: ${newBuildId}`);
}

// 3. –û–±–Ω–æ–≤–ª—è–µ–º Service Worker —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º –∫–µ—à–∞
const swPath = path.join(process.cwd(), 'public', 'sw.js');
if (fs.existsSync(swPath)) {
  let swContent = fs.readFileSync(swPath, 'utf8');
  
  // –ó–∞–º–µ–Ω—è–µ–º CACHE_NAME –Ω–∞ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  swContent = swContent.replace(
    /const CACHE_NAME = .*?;/,
    `const CACHE_NAME = 'stefa-books-cache-${newBuildId}';`
  );
  
  // –û–±–Ω–æ–≤–ª—è–µ–º BUILD_ID –≤ Service Worker
  swContent = swContent.replace(
    /const BUILD_ID = .*?;/,
    `const BUILD_ID = '${newBuildId}';`
  );
  
  fs.writeFileSync(swPath, swContent);
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω Service Worker —Å –Ω–æ–≤—ã–º –∫–µ—à–µ–º: ${newBuildId}`);
}

// 4. –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
const cacheMetaPath = path.join(process.cwd(), 'public', 'cache-meta.json');
const cacheMeta = {
  buildId: newBuildId,
  timestamp: new Date().toISOString(),
  version: process.env.COMMIT_REF || process.env.VERCEL_GIT_COMMIT_SHA || 'local',
  environment: process.env.NODE_ENV || 'development',
  cacheBuster: true,
  forceReload: true
};

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é public –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const publicDir = path.join(process.cwd(), 'public');
if (!fs.existsSync(publicDir)) {
  fs.mkdirSync(publicDir, { recursive: true });
}

fs.writeFileSync(cacheMetaPath, JSON.stringify(cacheMeta, null, 2));
console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫–µ—à–∞: ${cacheMetaPath}`);

// 5. –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –≤–µ—Ä—Å–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
const versionPath = path.join(process.cwd(), 'public', 'version.txt');
fs.writeFileSync(versionPath, newBuildId);
console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –≤–µ—Ä—Å–∏–∏: ${versionPath}`);

// 6. –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞ –±—Ä–∞—É–∑–µ—Ä–∞
const cacheClearScript = `
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –±—Ä–∞—É–∑–µ—Ä–∞
(function() {
  const currentVersion = '${newBuildId}';
  const storedVersion = localStorage.getItem('stefa-books-version');
  
  if (storedVersion && storedVersion !== currentVersion) {
    console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è, –æ—á–∏—â–∞–µ–º –∫–µ—à...');
    
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–µ—à–∏
    if ('caches' in window) {
      caches.keys().then(names => {
        names.forEach(name => caches.delete(name));
      });
    }
    
    // –û—á–∏—â–∞–µ–º localStorage –∏ sessionStorage
    localStorage.clear();
    sessionStorage.clear();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
    localStorage.setItem('stefa-books-version', currentVersion);
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    window.location.reload();
  } else {
    localStorage.setItem('stefa-books-version', currentVersion);
  }
})();
`;

const cacheClearPath = path.join(process.cwd(), 'public', 'cache-clear.js');
fs.writeFileSync(cacheClearPath, cacheClearScript);
console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞: ${cacheClearPath}`);

console.log('üéâ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log(`üì¶ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: ${newBuildId}`);
console.log('üöÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ–ª—å—à–µ –ù–ï –Ω—É–∂–Ω–æ –Ω–∞–∂–∏–º–∞—Ç—å Ctrl+Shift+R!');
console.log('üí° –ö–µ—à –±—É–¥–µ—Ç –æ—á–∏—â–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö');
