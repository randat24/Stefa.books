#!/usr/bin/env node

/**
 * –ü–†–û–í–ï–†–ö–ê –ö–ù–ò–ì –ë–ï–ó –û–ë–õ–û–ñ–ï–ö
 */

// eslint-disable-next-line @typescript-eslint/no-var-requires
const { createClient } = require('@supabase/supabase-js');
// eslint-disable-next-line @typescript-eslint/no-var-requires
require('dotenv').config({ path: '.env.local' });

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function findBooksWithoutCovers() {
  console.log('üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –±–µ–∑ Cloudinary –æ–±–ª–æ–∂–µ–∫...\n');
  
  const { data: allBooks } = await supabase
    .from('books')
    .select('code, title, cover_url')
    .order('code');
  
  const { data: booksWithCovers } = await supabase
    .from('books')
    .select('code')
    .like('cover_url', '%cloudinary%');
  
  const booksWithCoversCodes = new Set(booksWithCovers.map(b => b.code));
  
  const booksWithoutCovers = allBooks.filter(book => !booksWithCoversCodes.has(book.code));
  
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`üìö –í—Å–µ–≥–æ –∫–Ω–∏–≥ –≤ –ë–î: ${allBooks.length}`);
  console.log(`‚úÖ –ö–Ω–∏–≥ —Å Cloudinary –æ–±–ª–æ–∂–∫–∞–º–∏: ${booksWithCovers.length}`);
  console.log(`‚ùå –ö–Ω–∏–≥ –±–µ–∑ Cloudinary –æ–±–ª–æ–∂–µ–∫: ${booksWithoutCovers.length}`);
  console.log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: ${Math.round((booksWithCovers.length / allBooks.length) * 100)}%\n`);
  
  if (booksWithoutCovers.length > 0) {
    console.log('üìö –ö–Ω–∏–≥–∏ –±–µ–∑ Cloudinary –æ–±–ª–æ–∂–µ–∫:');
    booksWithoutCovers.forEach(book => {
      console.log(`‚ùå ${book.code}: ${book.title}`);
      if (book.cover_url) {
        if (book.cover_url.includes('drive.google.com')) {
          console.log(`   üìÅ Google Drive —Å—Å—ã–ª–∫–∞: ${book.cover_url}`);
        } else {
          console.log(`   üîó –î—Ä—É–≥–∞—è —Å—Å—ã–ª–∫–∞: ${book.cover_url}`);
        }
      } else {
        console.log(`   ‚ùå –ù–µ—Ç –æ–±–ª–æ–∂–∫–∏`);
      }
    });
  }
}

findBooksWithoutCovers();
