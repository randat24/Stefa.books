#!/usr/bin/env node

/**
 * TypeScript Server Restart Script
 * –ü–æ–º–æ–≥–∞–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å TypeScript —Å–µ—Ä–≤–µ—Ä –∏ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à–∏ IDE
 */

console.log('üîÑ Restarting TypeScript server and clearing caches...');

const fs = require('fs');
const path = require('path');

// 1. –û—á–∏—â–∞–µ–º TypeScript –∫—ç—à–∏
const tsCacheDir = path.join(process.cwd(), 'node_modules/.cache/typescript');
if (fs.existsSync(tsCacheDir)) {
  fs.rmSync(tsCacheDir, { recursive: true, force: true });
  console.log('‚úÖ Cleared TypeScript cache');
}

// 2. –û—á–∏—â–∞–µ–º .tsbuildinfo —Ñ–∞–π–ª—ã
const tsBuildInfoFiles = [
  '.tsbuildinfo',
  'tsconfig.tsbuildinfo',
  '.next/tsconfig.tsbuildinfo'
];

tsBuildInfoFiles.forEach(file => {
  const filePath = path.join(process.cwd(), file);
  if (fs.existsSync(filePath)) {
    fs.unlinkSync(filePath);
    console.log(`‚úÖ Removed ${file}`);
  }
});

// 3. –¢—Ä–æ–≥–∞–µ–º tsconfig.json –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
const tsconfigPath = path.join(process.cwd(), 'tsconfig.json');
if (fs.existsSync(tsconfigPath)) {
  const now = new Date();
  fs.utimesSync(tsconfigPath, now, now);
  console.log('‚úÖ Touched tsconfig.json to restart TS server');
}

console.log('');
console.log('üéâ TypeScript server should restart automatically in your IDE');
console.log('üí° If you still see type errors, try:');
console.log('   1. Restart your IDE completely');
console.log('   2. Run "pnpm run type-check" to verify types work');
console.log('   3. In VS Code: Ctrl/Cmd + Shift + P ‚Üí "TypeScript: Restart TS Server"');