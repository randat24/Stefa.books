#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã users
 */

const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.local
function loadEnv() {
  const envPath = path.join(process.cwd(), '.env.local');
  if (fs.existsSync(envPath)) {
    const envContent = fs.readFileSync(envPath, 'utf8');
    const lines = envContent.split('\n');
    lines.forEach(line => {
      const [key, value] = line.split('=');
      if (key && value) {
        process.env[key.trim()] = value.trim();
      }
    });
  }
}

loadEnv();

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkUsersTable() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã users...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ users
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã users...');
    const { data: tables, error: tablesError } = await supabase
      .from('information_schema.tables')
      .select('table_name')
      .eq('table_schema', 'public')
      .eq('table_name', 'users');

    if (tablesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü:', tablesError);
      return;
    }

    if (tables.length === 0) {
      console.error('‚ùå –¢–∞–±–ª–∏—Ü–∞ users –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
      return;
    }

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');

    // 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã users
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–æ–Ω–æ–∫ —Ç–∞–±–ª–∏—Ü—ã users...');
    const { data: columns, error: columnsError } = await supabase
      .from('information_schema.columns')
      .select('column_name, data_type, is_nullable, column_default')
      .eq('table_schema', 'public')
      .eq('table_name', 'users')
      .order('ordinal_position');

    if (columnsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–ª–æ–Ω–æ–∫:', columnsError);
      return;
    }

    console.log('üìã –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã users:');
    columns.forEach(col => {
      console.log(`  - ${col.column_name}: ${col.data_type} ${col.is_nullable === 'NO' ? 'NOT NULL' : 'NULL'} ${col.column_default ? `DEFAULT ${col.column_default}` : ''}`);
    });

    // 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ role
    const hasRoleColumn = columns.some(col => col.column_name === 'role');
    console.log(`\n3. –ö–æ–ª–æ–Ω–∫–∞ 'role': ${hasRoleColumn ? '‚úÖ –ù–∞–π–¥–µ–Ω–∞' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);

    // 4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ email
    const hasEmailColumn = columns.some(col => col.column_name === 'email');
    console.log(`4. –ö–æ–ª–æ–Ω–∫–∞ 'email': ${hasEmailColumn ? '‚úÖ –ù–∞–π–¥–µ–Ω–∞' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);

    // 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
    console.log('\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ users...');
    const { data: users, error: usersError } = await supabase
      .from('users')
      .select('*')
      .limit(5);

    if (usersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', usersError);
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 5):`);
    users.forEach((user, index) => {
      console.log(`  ${index + 1}. ${user.name} (${user.email}) - —Ä–æ–ª—å: ${user.role || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
    });

    // 6. –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ role, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ–±–∞–≤–∏—Ç—å
    if (!hasRoleColumn) {
      console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      console.log('1. –î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É role –≤ —Ç–∞–±–ª–∏—Ü—É users:');
      console.log('   ALTER TABLE users ADD COLUMN role TEXT DEFAULT \'user\' CHECK (role IN (\'user\', \'admin\', \'moderator\'));');
      console.log('2. –°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å –¥–ª—è —Ä–æ–ª–µ–π:');
      console.log('   CREATE INDEX IF NOT EXISTS idx_users_role ON users(role);');
    }

    // 7. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    console.log('\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const { data: adminUsers, error: adminError } = await supabase
      .from('users')
      .select('*')
      .or('email.eq.admin@stefa-books.com.ua,email.eq.admin@stefabooks.com.ua');

    if (adminError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤:', adminError);
    } else {
      console.log(`üëë –ù–∞–π–¥–µ–Ω–æ ${adminUsers.length} –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:`);
      adminUsers.forEach(admin => {
        console.log(`  - ${admin.name} (${admin.email}) - —Ä–æ–ª—å: ${admin.role || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      });
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkUsersTable().then(() => {
  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});
