import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testBooksAPI() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–Ω–∏–≥...\n');

    try {
        // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫–Ω–∏–≥
        console.log('1Ô∏è‚É£ –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫–Ω–∏–≥...');
        const { data: books, error: booksError } = await supabase
            .from('books')
            .select('id, title, author, available')
            .limit(5);

        if (booksError) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–Ω–∏–≥:', booksError.message);
            console.log('   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', booksError);
        } else {
            console.log('‚úÖ –ö–Ω–∏–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã:', books?.length || 0, '–∫–Ω–∏–≥');
            if (books && books.length > 0) {
                books.forEach(book => {
                    console.log(`   - ${book.title} by ${book.author} (${book.available ? '–¥–æ—Å—Ç—É–ø–Ω–∞' : '–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'})`);
                });
            }
        }

        // –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
        console.log('\n2Ô∏è‚É£ –ó–∞–ø—Ä–æ—Å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏...');
        const { data: filteredBooks, error: filteredError } = await supabase
            .from('books')
            .select('id, title, author, available')
            .eq('available', true)
            .limit(3);

        if (filteredError) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–Ω–∏–≥:', filteredError.message);
        } else {
            console.log('‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏:', filteredBooks?.length || 0, '–∫–Ω–∏–≥');
        }

        // –¢–µ—Å—Ç 3: –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        console.log('\n3Ô∏è‚É£ –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–∏–≥...');
        const { count, error: countError } = await supabase
            .from('books')
            .select('*', { count: 'exact', head: true });

        if (countError) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –∫–Ω–∏–≥:', countError.message);
        } else {
            console.log('‚úÖ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥:', count || 0);
        }

        // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã
        console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã books...');
        const { data: sampleBook, error: sampleError } = await supabase
            .from('books')
            .select('*')
            .limit(1)
            .single();

        if (sampleError) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—Ä–∞–∑—Ü–∞ –∫–Ω–∏–≥–∏:', sampleError.message);
        } else {
            console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã books:');
            if (sampleBook) {
                Object.keys(sampleBook).forEach(key => {
                    console.log(`   - ${key}: ${typeof sampleBook[key]}`);
                });
            }
        }

    } catch (error) {
        console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message);
        console.error('   Stack trace:', error.stack);
    }

    console.log('\nüéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:');
    console.log('1. –ï—Å–ª–∏ –∫–Ω–∏–≥–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è - –ø—Ä–æ–±–ª–µ–º–∞ –≤ API –∫–æ–¥–µ');
    console.log('2. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ RLS - –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏');
    console.log('3. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testBooksAPI().catch(console.error);
