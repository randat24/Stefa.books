#!/bin/bash

# üîç –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–î –ö–û–ú–ú–ò–¢–û–ú
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∫–æ–º–º–∏—Ç–æ–º

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
ERRORS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    ((ERRORS++))
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ git
check_git_status() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Git..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã
    if [ -n "$(git status --porcelain | grep '^??')" ]; then
        warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã:"
        git status --porcelain | grep '^??' | sed 's/^?? /  - /'
        echo ""
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if [ -n "$(git status --porcelain | grep -v '^??')" ]; then
        info "–ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞:"
        git status --porcelain | grep -v '^??' | sed 's/^/  /'
        echo ""
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
check_package_json() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ package.json..."
    
    if [ ! -f "package.json" ]; then
        error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
    REQUIRED_SCRIPTS=("dev" "build" "start" "lint" "type-check")
    for script in "${REQUIRED_SCRIPTS[@]}"; do
        if ! grep -q "\"$script\":" package.json; then
            error "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç: $script"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
    if grep -q '"engines"' package.json; then
        NODE_VERSION=$(node --version | sed 's/v//')
        REQUIRED_VERSION=$(grep -o '"node": "[^"]*"' package.json | sed 's/"node": "//' | sed 's/"//')
        
        if [ -n "$REQUIRED_VERSION" ]; then
            info "–¢—Ä–µ–±—É–µ–º–∞—è –≤–µ—Ä—Å–∏—è Node.js: $REQUIRED_VERSION"
            info "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è Node.js: $NODE_VERSION"
        fi
    fi
    
    log "package.json –ø—Ä–æ–≤–µ—Ä–µ–Ω ‚úÖ"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript
check_typescript() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript..."
    
    if [ ! -f "tsconfig.json" ]; then
        error "tsconfig.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
    if pnpm run type-check > /dev/null 2>&1; then
        log "TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ ‚úÖ"
    else
        error "TypeScript –æ—à–∏–±–∫–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!"
        warning "–ó–∞–ø—É—Å–∫ type-check –¥–ª—è –¥–µ—Ç–∞–ª–µ–π..."
        pnpm run type-check || true
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint
check_eslint() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint
    if pnpm run lint > /dev/null 2>&1; then
        log "ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ ‚úÖ"
    else
        warning "ESLint –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!"
        info "–ó–∞–ø—É—Å–∫ lint –¥–ª—è –¥–µ—Ç–∞–ª–µ–π..."
        pnpm run lint || true
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
check_build() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏..."
    
    # –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    pnpm run clean:cache > /dev/null 2>&1 || true
    
    # –ü–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏
    if pnpm run build > /dev/null 2>&1; then
        log "–°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞ ‚úÖ"
    else
        error "–°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!"
        warning "–ó–∞–ø—É—Å–∫ build –¥–ª—è –¥–µ—Ç–∞–ª–µ–π..."
        pnpm run build || true
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
check_critical_files() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    
    CRITICAL_FILES=(
        "next.config.js"
        "tsconfig.json"
        "tailwind.config.ts"
        "src/middleware.ts"
        "src/lib/supabase.ts"
    )
    
    for file in "${CRITICAL_FILES[@]}"; do
        if [ ! -f "$file" ]; then
            error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: $file"
        else
            log "‚úì $file"
        fi
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ environment variables
check_env_vars() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ environment variables..."
    
    if [ ! -f ".env.local" ]; then
        warning ".env.local –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        info "–°–æ–∑–¥–∞–π—Ç–µ .env.local —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏"
    else
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        REQUIRED_VARS=(
            "NEXT_PUBLIC_SUPABASE_URL"
            "NEXT_PUBLIC_SUPABASE_ANON_KEY"
            "SUPABASE_SERVICE_ROLE_KEY"
        )
        
        for var in "${REQUIRED_VARS[@]}"; do
            if ! grep -q "^$var=" .env.local; then
                warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: $var"
            else
                log "‚úì $var"
            fi
        done
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
check_security() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–µ–∫—Ä–µ—Ç—ã –≤ –∫–æ–¥–µ
    SECRET_PATTERNS=(
        "password.*=.*['\"].*['\"]"
        "secret.*=.*['\"].*['\"]"
        "key.*=.*['\"].*['\"]"
        "token.*=.*['\"].*['\"]"
    )
    
    for pattern in "${SECRET_PATTERNS[@]}"; do
        if grep -r -i "$pattern" src/ --exclude-dir=node_modules 2>/dev/null | grep -v "// TODO\|// FIXME\|// NOTE"; then
            warning "–í–æ–∑–º–æ–∂–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –≤ –∫–æ–¥–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!"
            info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ console.log –≤ production –∫–æ–¥–µ
    if grep -r "console\.log\|console\.warn\|console\.error" src/ --exclude-dir=node_modules 2>/dev/null | grep -v "// TODO\|// FIXME"; then
        warning "console.log –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤ –∫–æ–¥–µ!"
        info "–£–¥–∞–ª–∏—Ç–µ –∏–ª–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ console.log –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π
check_styles() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ inline —Å—Ç–∏–ª–∏
    if grep -r "style=" src/ --exclude-dir=node_modules 2>/dev/null | grep -v "// TODO\|// FIXME"; then
        warning "Inline —Å—Ç–∏–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!"
        info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Tailwind CSS –∫–ª–∞—Å—Å—ã –≤–º–µ—Å—Ç–æ inline —Å—Ç–∏–ª–µ–π"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ !important
    if grep -r "!important" src/ --exclude-dir=node_modules 2>/dev/null | grep -v "// TODO\|// FIXME"; then
        warning "!important –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ –∫–æ–¥–µ!"
        info "–ò–∑–±–µ–≥–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è !important"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
check_admin_panel() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
    ADMIN_APIS=(
        "src/app/api/admin/dashboard/route.ts"
        "src/app/api/admin/users/route.ts"
        "src/app/api/admin/books/route.ts"
    )
    
    for api in "${ADMIN_APIS[@]}"; do
        if [ -f "$api" ]; then
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
            if ! grep -q "isAdminByEmail\|isAdminByRole" "$api"; then
                warning "API $api –º–æ–∂–µ—Ç –Ω–µ –∏–º–µ—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!"
            else
                log "‚úì $api"
            fi
        fi
    done
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
show_stats() {
    echo ""
    echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–í–ï–†–ö–ò"
    echo "====================="
    
    if [ $ERRORS -eq 0 ]; then
        log "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! ‚úÖ"
        echo ""
        echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∫–æ–º–º–∏—Ç—É!"
    else
        error "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $ERRORS –æ—à–∏–±–æ–∫!"
        echo ""
        echo "‚ùå –ù–ï –ö–û–ú–ú–ò–¢–¨–¢–ï –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫!"
        echo ""
        echo "üí° –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
        echo "   ./scripts/emergency-fix.sh quick"
    fi
    
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üîç –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–î –ö–û–ú–ú–ò–¢–û–ú"
    echo "=========================================="
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_git_status
    check_package_json
    check_critical_files
    check_env_vars
    check_typescript
    check_eslint
    check_build
    check_security
    check_styles
    check_admin_panel
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    show_stats
    
    # –í–æ–∑–≤—Ä–∞—Ç –∫–æ–¥–∞ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
    if [ $ERRORS -gt 0 ]; then
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫
main "$@"
