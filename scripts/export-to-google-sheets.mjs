#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î –≤ Google Sheets
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/export-to-google-sheets.mjs
 */

import { createClient } from '@supabase/supabase-js'
import { writeFileSync } from 'fs'
import { stringify } from 'csv-stringify/sync'
import dotenv from 'dotenv'

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function exportBooksToCSV() {
  console.log('üìö –≠–∫—Å–ø–æ—Ä—Ç –∫–Ω–∏–≥...')
  
  const { data: books, error } = await supabase
    .from('books')
    .select(`
      *,
      categories:category_id (
        name,
        parent_id
      )
    `)
    .order('code')
  
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥:', error.message)
    return null
  }
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è CSV
  const booksData = books.map(book => ({
    '–ö–æ–¥': book.code,
    '–ù–∞–∑–≤–∞': book.title,
    '–ê–≤—Ç–æ—Ä': book.author || '',
    '–í–∏–¥–∞–≤–Ω–∏—Ü—Ç–≤–æ': book.publisher || '',
    '–ö–∞—Ç–µ–≥–æ—Ä—ñ—è': book.categories?.name || '',
    '–í—Å—å–æ–≥–æ': book.qty_total,
    '–î–æ—Å—Ç—É–ø–Ω–æ': book.qty_available,
    '–°—Ç–∞—Ç—É—Å': book.available ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞',
    '–¶—ñ–Ω–∞': book.price_uah,
    '–ü–æ–≤–Ω–∞ —Ü—ñ–Ω–∞': book.full_price_uah || book.price_uah,
    'cover_url': book.cover_url || '',
    '–û–ø–∏—Å': book.description || '',
    'ISBN': book.isbn || '',
    '–í—ñ–∫–æ–≤–∞ –≥—Ä—É–ø–∞': book.age_range || '',
    '–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å': book.short_description || '',
    '–ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è': book.location || '',
    '–°—Ç–≤–æ—Ä–µ–Ω–æ': book.created_at,
    '–û–Ω–æ–≤–ª–µ–Ω–æ': book.updated_at
  }))
  
  // –°–æ–∑–¥–∞–µ–º CSV
  const csvContent = stringify(booksData, {
    header: true,
    columns: [
      '–ö–æ–¥', '–ù–∞–∑–≤–∞', '–ê–≤—Ç–æ—Ä', '–í–∏–¥–∞–≤–Ω–∏—Ü—Ç–≤–æ', '–ö–∞—Ç–µ–≥–æ—Ä—ñ—è',
      '–í—Å—å–æ–≥–æ', '–î–æ—Å—Ç—É–ø–Ω–æ', '–°—Ç–∞—Ç—É—Å', '–¶—ñ–Ω–∞', '–ü–æ–≤–Ω–∞ —Ü—ñ–Ω–∞',
      'cover_url', '–û–ø–∏—Å', 'ISBN', '–í—ñ–∫–æ–≤–∞ –≥—Ä—É–ø–∞', '–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å',
      '–ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è', '–°—Ç–≤–æ—Ä–µ–Ω–æ', '–û–Ω–æ–≤–ª–µ–Ω–æ'
    ]
  })
  
  writeFileSync('export_books.csv', csvContent, 'utf8')
  console.log(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${books.length} –∫–Ω–∏–≥ –≤ export_books.csv`)
  return books.length
}

async function exportUsersToCSV() {
  console.log('üë• –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
  
  const { data: users, error } = await supabase
    .from('users')
    .select('*')
    .order('created_at')
  
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message)
    return null
  }
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è CSV
  const usersData = users.map(user => ({
    'ID': user.id,
    '–Ü–º\'—è': user.name || '',
    'Email': user.email || '',
    '–¢–µ–ª–µ—Ñ–æ–Ω': user.phone || '',
    '–†–æ–ª—å': user.role || '',
    '–°—Ç–∞—Ç—É—Å': user.status || '',
    '–¢–∏–ø –ø—ñ–¥–ø–∏—Å–∫–∏': user.subscription_type || '',
    '–î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó': user.created_at,
    '–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è': user.updated_at,
    '–ê–¥—Ä–µ—Å–∞': user.address || '',
    '–ú—ñ—Å—Ç–æ': user.city || '',
    '–ö—Ä–∞—ó–Ω–∞': user.country || '',
    '–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å': user.postal_code || '',
    '–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è': user.date_of_birth || '',
    '–°—Ç–∞—Ç—å': user.gender || '',
    '–ü—Ä–∏–º—ñ—Ç–∫–∏': user.notes || ''
  }))
  
  // –°–æ–∑–¥–∞–µ–º CSV
  const csvContent = stringify(usersData, {
    header: true,
    columns: [
      'ID', '–Ü–º\'—è', 'Email', '–¢–µ–ª–µ—Ñ–æ–Ω', '–†–æ–ª—å', '–°—Ç–∞—Ç—É—Å',
      '–¢–∏–ø –ø—ñ–¥–ø–∏—Å–∫–∏', '–î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó', '–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è',
      '–ê–¥—Ä–µ—Å–∞', '–ú—ñ—Å—Ç–æ', '–ö—Ä–∞—ó–Ω–∞', '–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å',
      '–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è', '–°—Ç–∞—Ç—å', '–ü—Ä–∏–º—ñ—Ç–∫–∏'
    ]
  })
  
  writeFileSync('export_users.csv', csvContent, 'utf8')
  console.log(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ export_users.csv`)
  return users.length
}

async function exportCategoriesToCSV() {
  console.log('üè∑Ô∏è  –≠–∫—Å–ø–æ—Ä—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π...')
  
  const { data: categories, error } = await supabase
    .from('categories')
    .select('*')
    .order('display_order')
  
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.message)
    return null
  }
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è CSV
  const categoriesData = categories.map(category => ({
    'ID': category.id,
    '–ù–∞–∑–≤–∞': category.name,
    '–û–ø–∏—Å': category.description || '',
    '–ü–æ—Ä—è–¥–æ–∫': category.display_order,
    '–ë–∞—Ç—å–∫—ñ–≤—Å—å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è': category.parent_id || '',
    '–Ü–∫–æ–Ω–∫–∞': category.icon || '',
    '–ö–æ–ª—ñ—Ä': category.color || '',
    '–°—Ç–≤–æ—Ä–µ–Ω–æ': category.created_at,
    '–û–Ω–æ–≤–ª–µ–Ω–æ': category.updated_at
  }))
  
  // –°–æ–∑–¥–∞–µ–º CSV
  const csvContent = stringify(categoriesData, {
    header: true,
    columns: [
      'ID', '–ù–∞–∑–≤–∞', '–û–ø–∏—Å', '–ü–æ—Ä—è–¥–æ–∫', '–ë–∞—Ç—å–∫—ñ–≤—Å—å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è',
      '–Ü–∫–æ–Ω–∫–∞', '–ö–æ–ª—ñ—Ä', '–°—Ç–≤–æ—Ä–µ–Ω–æ', '–û–Ω–æ–≤–ª–µ–Ω–æ'
    ]
  })
  
  writeFileSync('export_categories.csv', csvContent, 'utf8')
  console.log(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ export_categories.csv`)
  return categories.length
}

async function exportRentalsToCSV() {
  console.log('üìñ –≠–∫—Å–ø–æ—Ä—Ç –∞—Ä–µ–Ω–¥...')
  
  const { data: rentals, error } = await supabase
    .from('rentals')
    .select(`
      *,
      books:book_id (title, code),
      users:user_id (name, email)
    `)
    .order('created_at')
  
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä–µ–Ω–¥:', error.message)
    return null
  }
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è CSV
  const rentalsData = rentals.map(rental => ({
    'ID': rental.id,
    '–ö–Ω–∏–≥–∞': rental.books?.title || '',
    '–ö–æ–¥ –∫–Ω–∏–≥–∏': rental.books?.code || '',
    '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á': rental.users?.name || '',
    'Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞': rental.users?.email || '',
    '–°—Ç–∞—Ç—É—Å': rental.status || '',
    '–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É': rental.start_date,
    '–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è': rental.end_date,
    '–î–∞—Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è': rental.return_date || '',
    '–¶—ñ–Ω–∞': rental.price || '',
    '–°—Ç–≤–æ—Ä–µ–Ω–æ': rental.created_at,
    '–û–Ω–æ–≤–ª–µ–Ω–æ': rental.updated_at,
    '–ü—Ä–∏–º—ñ—Ç–∫–∏': rental.notes || ''
  }))
  
  // –°–æ–∑–¥–∞–µ–º CSV
  const csvContent = stringify(rentalsData, {
    header: true,
    columns: [
      'ID', '–ö–Ω–∏–≥–∞', '–ö–æ–¥ –∫–Ω–∏–≥–∏', '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á', 'Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
      '–°—Ç–∞—Ç—É—Å', '–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É', '–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è', '–î–∞—Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è',
      '–¶—ñ–Ω–∞', '–°—Ç–≤–æ—Ä–µ–Ω–æ', '–û–Ω–æ–≤–ª–µ–Ω–æ', '–ü—Ä–∏–º—ñ—Ç–∫–∏'
    ]
  })
  
  writeFileSync('export_rentals.csv', csvContent, 'utf8')
  console.log(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${rentals.length} –∞—Ä–µ–Ω–¥ –≤ export_rentals.csv`)
  return rentals.length
}

async function exportSubscriptionRequestsToCSV() {
  console.log('üìã –≠–∫—Å–ø–æ—Ä—Ç –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É...')
  
  const { data: requests, error } = await supabase
    .from('subscription_requests')
    .select('*')
    .order('created_at')
  
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:', error.message)
    return null
  }
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è CSV
  const requestsData = requests.map(request => ({
    'ID': request.id,
    '–Ü–º\'—è': request.name || '',
    'Email': request.email || '',
    '–¢–µ–ª–µ—Ñ–æ–Ω': request.phone || '',
    '–¢–∏–ø –ø—ñ–¥–ø–∏—Å–∫–∏': request.subscription_type || '',
    '–°—Ç–∞—Ç—É—Å': request.status || '',
    '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è': request.message || '',
    '–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è': request.created_at,
    '–î–∞—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è': request.updated_at,
    '–ü—Ä–∏–º—ñ—Ç–∫–∏': request.notes || ''
  }))
  
  // –°–æ–∑–¥–∞–µ–º CSV
  const csvContent = stringify(requestsData, {
    header: true,
    columns: [
      'ID', '–Ü–º\'—è', 'Email', '–¢–µ–ª–µ—Ñ–æ–Ω', '–¢–∏–ø –ø—ñ–¥–ø–∏—Å–∫–∏',
      '–°—Ç–∞—Ç—É—Å', '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', '–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è', '–î–∞—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è', '–ü—Ä–∏–º—ñ—Ç–∫–∏'
    ]
  })
  
  writeFileSync('export_subscription_requests.csv', csvContent, 'utf8')
  console.log(`‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${requests.length} –∑–∞—è–≤–æ–∫ –≤ export_subscription_requests.csv`)
  return requests.length
}

async function createSummaryReport() {
  console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...')
  
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-')
  const reportContent = `# üìä –û—Ç—á–µ—Ç –æ–± —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö - ${new Date().toLocaleString('uk-UA')}

## üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:

### üìö –ö–Ω–∏–≥–∏:
- **–§–∞–π–ª:** export_books.csv
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** ${await getBooksCount()} –∫–Ω–∏–≥
- **–ü–æ–ª—è:** –ö–æ–¥, –ù–∞–∑–≤–∞–Ω–∏–µ, –ê–≤—Ç–æ—Ä, –ò–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –ö–∞—Ç–µ–≥–æ—Ä–∏—è, –¶–µ–Ω—ã, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, –°—Ç–∞—Ç—É—Å

### üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:
- **–§–∞–π–ª:** export_users.csv  
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** ${await getUsersCount()} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- **–ü–æ–ª—è:** ID, –ò–º—è, Email, –†–æ–ª—å, –°—Ç–∞—Ç—É—Å, –ü–æ–¥–ø–∏—Å–∫–∞, –ê–¥—Ä–µ—Å

### üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:
- **–§–∞–π–ª:** export_categories.csv
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** ${await getCategoriesCount()} –∫–∞—Ç–µ–≥–æ—Ä–∏–π
- **–ü–æ–ª—è:** ID, –ù–∞–∑–≤–∞–Ω–∏–µ, –û–ø–∏—Å–∞–Ω–∏–µ, –ü–æ—Ä—è–¥–æ–∫, –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è

### üìñ –ê—Ä–µ–Ω–¥—ã:
- **–§–∞–π–ª:** export_rentals.csv
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** ${await getRentalsCount()} –∞—Ä–µ–Ω–¥
- **–ü–æ–ª—è:** ID, –ö–Ω–∏–≥–∞, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –°—Ç–∞—Ç—É—Å, –î–∞—Ç—ã, –¶–µ–Ω–∞

### üìã –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É:
- **–§–∞–π–ª:** export_subscription_requests.csv
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** ${await getSubscriptionRequestsCount()} –∑–∞—è–≤–æ–∫
- **–ü–æ–ª—è:** ID, –ò–º—è, Email, –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏, –°—Ç–∞—Ç—É—Å

## üéØ –ò—Ç–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ:
- **–ö–Ω–∏–≥–∏:** ${await getBooksCount()}
- **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** ${await getUsersCount()}
- **–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:** ${await getCategoriesCount()}
- **–ê—Ä–µ–Ω–¥—ã:** ${await getRentalsCount()}
- **–ó–∞—è–≤–∫–∏:** ${await getSubscriptionRequestsCount()}

## üìÅ –§–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Google Sheets:
1. export_books.csv - –ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥
2. export_users.csv - –ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
3. export_categories.csv - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–Ω–∏–≥
4. export_rentals.csv - –ò—Å—Ç–æ—Ä–∏—è –∞—Ä–µ–Ω–¥
5. export_subscription_requests.csv - –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É

## üîÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ –≤ Google Sheets:
1. –û—Ç–∫—Ä–æ–π—Ç–µ Google Sheets
2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
3. –§–∞–π–ª ‚Üí –ò–º–ø–æ—Ä—Ç ‚Üí –ó–∞–≥—Ä—É–∑–∏—Ç—å
4. –í—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª
5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ (–∑–∞–ø—è—Ç–∞—è)
6. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ

## ‚ö†Ô∏è –í–∞–∂–Ω–æ:
- –í—Å–µ –¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV
- –ö–æ–¥–∏—Ä–æ–≤–∫–∞: UTF-8
- –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å: –∑–∞–ø—è—Ç–∞—è
- –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏

---
*–≠–∫—Å–ø–æ—Ä—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω: ${new Date().toLocaleString('uk-UA')}*
`

  writeFileSync(`export_report_${timestamp}.md`, reportContent, 'utf8')
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç: export_report_${timestamp}.md`)
}

async function getBooksCount() {
  const { count } = await supabase.from('books').select('*', { count: 'exact', head: true })
  return count || 0
}

async function getUsersCount() {
  const { count } = await supabase.from('users').select('*', { count: 'exact', head: true })
  return count || 0
}

async function getCategoriesCount() {
  const { count } = await supabase.from('categories').select('*', { count: 'exact', head: true })
  return count || 0
}

async function getRentalsCount() {
  const { count } = await supabase.from('rentals').select('*', { count: 'exact', head: true })
  return count || 0
}

async function getSubscriptionRequestsCount() {
  const { count } = await supabase.from('subscription_requests').select('*', { count: 'exact', head: true })
  return count || 0
}

async function main() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤ CSV...')
    console.log('=' .repeat(60))
    
    const timestamp = new Date().toISOString().split('T')[0]
    console.log(`üìÖ –î–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${timestamp}`)
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    const booksCount = await exportBooksToCSV()
    const usersCount = await exportUsersToCSV()
    const categoriesCount = await exportCategoriesToCSV()
    const rentalsCount = await exportRentalsToCSV()
    const requestsCount = await exportSubscriptionRequestsToCSV()
    
    // –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç
    await createSummaryReport()
    
    console.log('\nüéâ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!')
    console.log('=' .repeat(60))
    console.log(`üìö –ö–Ω–∏–≥–∏: ${booksCount}`)
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${usersCount}`)
    console.log(`üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoriesCount}`)
    console.log(`üìñ –ê—Ä–µ–Ω–¥—ã: ${rentalsCount}`)
    console.log(`üìã –ó–∞—è–≤–∫–∏: ${requestsCount}`)
    
    console.log('\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:')
    console.log('  - export_books.csv')
    console.log('  - export_users.csv')
    console.log('  - export_categories.csv')
    console.log('  - export_rentals.csv')
    console.log('  - export_subscription_requests.csv')
    console.log('  - export_report_*.md')
    
    console.log('\nüîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Google Sheets')
    console.log('2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É')
    console.log('3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ CSV —Ñ–∞–π–ª—ã')
    console.log('4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ')
    
  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main()
