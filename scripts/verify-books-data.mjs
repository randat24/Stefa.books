#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É CSV –∏ –ë–î
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/verify-books-data.mjs
 */

import { createClient } from '@supabase/supabase-js'
import { readFileSync } from 'fs'
import { parse } from 'csv-parse/sync'
import dotenv from 'dotenv'

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function verifyBooksData() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É CSV –∏ –ë–î...')
    console.log('=' .repeat(60))
    
    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV
    console.log('üìñ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV...')
    const csvFilePath = '/Users/fantomas/Downloads/Stefa.books - –ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥.csv'
    const csvContent = readFileSync(csvFilePath, 'utf-8')
    
    const csvRecords = parse(csvContent, {
      columns: true,
      skip_empty_lines: true,
      trim: true
    })
    
    console.log(`üìä CSV: ${csvRecords.length} –∑–∞–ø–∏—Å–µ–π`)
    
    // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    console.log('üóÑÔ∏è  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î...')
    const { data: dbBooks, error } = await supabase
      .from('books')
      .select('*')
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –ë–î:', error.message)
      return
    }
    
    console.log(`üìä –ë–î: ${dbBooks.length} –∑–∞–ø–∏—Å–µ–π`)
    
    // 3. –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const csvMap = new Map()
    const dbMap = new Map()
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º CSV –¥–∞–Ω–Ω—ã–µ
    csvRecords.forEach(record => {
      const code = record['–ö–æ–¥']
      if (code) {
        csvMap.set(code, {
          code: code,
          title: record['–ù–∞–∑–≤–∞'] || '',
          author: record['–ê–≤—Ç–æ—Ä'] || '',
          publisher: record['–í–∏–¥–∞–≤–Ω–∏—Ü—Ç–≤–æ'] || '',
          category: record['–ö–∞—Ç–µ–≥–æ—Ä—ñ—è'] || '',
          totalQty: parseInt(record['–í—Å—å–æ–≥–æ'] || '1'),
          availableQty: parseInt(record['–î–æ—Å—Ç—É–ø–Ω–æ'] || '1'),
          status: record['–°—Ç–∞—Ç—É—Å'] || '',
          price: parseFloat(record['–¶—ñ–Ω–∞'] || '0'),
          fullPrice: parseFloat(record['–ü–æ–≤–Ω–∞ —Ü—ñ–Ω–∞'] || '0'),
          coverUrl: record['cover_url'] || '',
          description: record['–û–ø–∏—Å'] || ''
        })
      }
    })
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ë–î –¥–∞–Ω–Ω—ã–µ
    dbBooks.forEach(book => {
      dbMap.set(book.code, book)
    })
    
    console.log(`\nüìã –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ –∫–æ–¥–∞–º:`)
    console.log(`  CSV —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–¥–æ–≤: ${csvMap.size}`)
    console.log(`  –ë–î —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–¥–æ–≤: ${dbMap.size}`)
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    let perfectMatch = 0
    let titleMismatch = 0
    let authorMismatch = 0
    let priceMismatch = 0
    let missingInDB = 0
    let missingInCSV = 0
    let missingCover = 0
    let missingAuthor = 0
    let missingPublisher = 0
    let missingCategory = 0
    
    const issues = []
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–∏–≥–∏ –∏–∑ CSV
    for (const [code, csvBook] of csvMap) {
      const dbBook = dbMap.get(code)
      
      if (!dbBook) {
        missingInDB++
        issues.push(`‚ùå –ö–æ–¥ ${code} (${csvBook.title}) - –µ—Å—Ç—å –≤ CSV, –Ω–µ—Ç –≤ –ë–î`)
        continue
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª–µ–π
      if (csvBook.title !== dbBook.title) {
        titleMismatch++
        issues.push(`‚ö†Ô∏è  –ö–æ–¥ ${code}: –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç`)
      }
      
      if (csvBook.author !== dbBook.author) {
        authorMismatch++
        issues.push(`‚ö†Ô∏è  –ö–æ–¥ ${code}: –∞–≤—Ç–æ—Ä –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç`)
      }
      
      if (Math.abs(csvBook.price - (dbBook.price_uah || 0)) > 0.01) {
        priceMismatch++
        issues.push(`‚ö†Ô∏è  –ö–æ–¥ ${code}: —Ü–µ–Ω–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç`)
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
      if (!dbBook.cover_url) {
        missingCover++
      }
      
      if (!dbBook.author) {
        missingAuthor++
      }
      
      if (!dbBook.category_id) {
        missingCategory++
      }
      
      if (csvBook.title === dbBook.title && 
          csvBook.author === dbBook.author && 
          Math.abs(csvBook.price - (dbBook.price_uah || 0)) <= 0.01) {
        perfectMatch++
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–∏–≥–∏ –∏–∑ –ë–î
    for (const [code, dbBook] of dbMap) {
      if (!csvMap.has(code)) {
        missingInCSV++
        issues.push(`‚ùå –ö–æ–¥ ${code} (${dbBook.title}) - –µ—Å—Ç—å –≤ –ë–î, –Ω–µ—Ç –≤ CSV`)
      }
    }
    
    // 5. –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:`)
    console.log(`  ‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${perfectMatch}`)
    console.log(`  ‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π: ${titleMismatch}`)
    console.log(`  ‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∞–≤—Ç–æ—Ä–æ–≤: ${authorMismatch}`)
    console.log(`  ‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ü–µ–Ω: ${priceMismatch}`)
    console.log(`  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ë–î: ${missingInDB}`)
    console.log(`  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ CSV: ${missingInCSV}`)
    
    console.log(`\nüìã –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–∞–Ω–Ω—ã–º–∏:`)
    console.log(`  üñºÔ∏è  –ë–µ–∑ –æ–±–ª–æ–∂–∫–∏: ${missingCover}`)
    console.log(`  üë§ –ë–µ–∑ –∞–≤—Ç–æ—Ä–∞: ${missingAuthor}`)
    console.log(`  üè¢ –ë–µ–∑ –∏–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞: ${missingPublisher}`)
    console.log(`  üè∑Ô∏è  –ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${missingCategory}`)
    
    // 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º
    if (issues.length > 0) {
      console.log(`\n‚ö†Ô∏è  –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º:`)
      issues.slice(0, 10).forEach(issue => {
        console.log(`  ${issue}`)
      })
      if (issues.length > 10) {
        console.log(`  ... –∏ –µ—â–µ ${issues.length - 10} –ø—Ä–æ–±–ª–µ–º`)
      }
    }
    
    // 7. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∫–Ω–∏–≥ –±–µ–∑ –æ–±–ª–æ–∂–∫–∏
    const booksWithoutCover = dbBooks.filter(book => !book.cover_url)
    if (booksWithoutCover.length > 0) {
      console.log(`\nüñºÔ∏è  –ö–Ω–∏–≥–∏ –±–µ–∑ –æ–±–ª–æ–∂–∫–∏ (${booksWithoutCover.length}):`)
      booksWithoutCover.slice(0, 5).forEach(book => {
        console.log(`  - ${book.title} (${book.code})`)
      })
      if (booksWithoutCover.length > 5) {
        console.log(`  ... –∏ –µ—â–µ ${booksWithoutCover.length - 5} –∫–Ω–∏–≥`)
      }
    }
    
    // 8. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∫–Ω–∏–≥ –±–µ–∑ –∞–≤—Ç–æ—Ä–∞
    const booksWithoutAuthor = dbBooks.filter(book => !book.author)
    if (booksWithoutAuthor.length > 0) {
      console.log(`\nüë§ –ö–Ω–∏–≥–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∞ (${booksWithoutAuthor.length}):`)
      booksWithoutAuthor.slice(0, 5).forEach(book => {
        console.log(`  - ${book.title} (${book.code})`)
      })
      if (booksWithoutAuthor.length > 5) {
        console.log(`  ... –∏ –µ—â–µ ${booksWithoutAuthor.length - 5} –∫–Ω–∏–≥`)
      }
    }
    
    // 9. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∫–Ω–∏–≥ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const booksWithoutCategory = dbBooks.filter(book => !book.category_id)
    if (booksWithoutCategory.length > 0) {
      console.log(`\nüè∑Ô∏è  –ö–Ω–∏–≥–∏ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (${booksWithoutCategory.length}):`)
      booksWithoutCategory.slice(0, 5).forEach(book => {
        console.log(`  - ${book.title} (${book.code})`)
      })
      if (booksWithoutCategory.length > 5) {
        console.log(`  ... –∏ –µ—â–µ ${booksWithoutCategory.length - 5} –∫–Ω–∏–≥`)
      }
    }
    
    console.log(`\nüéØ –ò—Ç–æ–≥:`)
    if (perfectMatch === csvMap.size && missingInDB === 0 && missingInCSV === 0) {
      console.log(`‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ë–î!`)
    } else {
      console.log(`‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞`)
    }
    
  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
verifyBooksData()
