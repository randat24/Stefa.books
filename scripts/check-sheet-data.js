#!/usr/bin/env node

/**
 * –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –ò–ó GOOGLE SHEETS
 */

// eslint-disable-next-line @typescript-eslint/no-var-requires
const { google } = require('googleapis');
// eslint-disable-next-line @typescript-eslint/no-var-requires
require('dotenv').config({ path: '.env.local' });

const auth = new google.auth.GoogleAuth({
  keyFile: process.env.GOOGLE_APPLICATION_CREDENTIALS,
  scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly']
});

const sheets = google.sheets({ version: 'v4', auth });

async function checkSheetData() {
  try {
    const response = await sheets.spreadsheets.values.get({
      spreadsheetId: process.env.GOOGLE_SPREADSHEET_ID,
      range: '–ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥!A1:Z10'
    });
    
    const rows = response.data.values;
    if (!rows || rows.length === 0) {
      console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ');
      return;
    }
    
    console.log('üìä –ü–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫ –∏–∑ Google Sheets:');
    rows.forEach((row, index) => {
      console.log(`–°—Ç—Ä–æ–∫–∞ ${index + 1}: ${row.join(' | ')}`);
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
  }
}

checkSheetData();
