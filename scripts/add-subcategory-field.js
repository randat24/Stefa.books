const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function addSubcategoryField() {
  console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ subcategory...');
  
  try {
    // 1. –û—Ç–∫–ª—é—á–∞–µ–º RLS
    console.log('1. –û—Ç–∫–ª—é—á–∞–µ–º RLS...');
    await supabase.rpc('exec_sql', {
      sql_query: 'ALTER TABLE books DISABLE ROW LEVEL SECURITY;'
    });
    
    // 2. –£–¥–∞–ª—è–µ–º –ø–æ–ª–µ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    console.log('2. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ subcategory...');
    await supabase.rpc('exec_sql', {
      sql_query: 'ALTER TABLE books DROP COLUMN IF EXISTS subcategory;'
    });
    
    // 3. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –∑–∞–Ω–æ–≤–æ
    console.log('3. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –ø–æ–ª–µ subcategory...');
    await supabase.rpc('exec_sql', {
      sql_query: 'ALTER TABLE books ADD COLUMN subcategory VARCHAR(255) DEFAULT \'–°–∫–∞–∑–∫–∏\';'
    });
    
    // 4. –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
    console.log('4. –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏...');
    await supabase.rpc('exec_sql', {
      sql_query: `
        UPDATE books SET 
          subcategory = '–°–∫–∞–∑–∫–∏'
        WHERE subcategory IS NULL;
      `
    });
    
    // 5. –í–∫–ª—é—á–∞–µ–º RLS
    console.log('5. –í–∫–ª—é—á–∞–µ–º RLS...');
    await supabase.rpc('exec_sql', {
      sql_query: 'ALTER TABLE books ENABLE ROW LEVEL SECURITY;'
    });
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    const { data: books, error: checkError } = await supabase
      .from('books')
      .select('id, title, author, category, subcategory')
      .limit(5);
    
    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', checkError);
    } else {
      console.log('üìö –†–µ–∑—É–ª—å—Ç–∞—Ç:');
      books.forEach(book => {
        console.log(`   - "${book.title}" by ${book.author} [${book.category} - ${book.subcategory}]`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

addSubcategoryField();
