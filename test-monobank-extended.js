#!/usr/bin/env node

// –†–æ–∑—à–∏—Ä–µ–Ω–∏–π —Ç–µ—Å—Ç Monobank API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—ñ–≤
require('dotenv').config({ path: '.env.local' });

const MONOBANK_TOKEN = process.env.MONOBANK_TOKEN;

async function testExtendedMonobankAPI() {
  console.log('üîç –¢–µ—Å—Ç—É—î–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ Monobank API...\n');

  try {
    // –¢–µ—Å—Ç 1: –°–ø—Ä–æ–±–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–ª–∞—Ç—ñ–∂ —á–µ—Ä–µ–∑ –æ—Å–æ–±–∏—Å—Ç–∏–π —Ç–æ–∫–µ–Ω
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É...');
    
    const paymentData = {
      amount: 50000, // 500 –≥—Ä–Ω –≤ –∫–æ–ø—ñ–π–∫–∞—Ö
      ccy: 980, // UAH
      merchantPaymInfo: {
        reference: `test-${Date.now()}`,
        destination: '–¢–µ—Å—Ç–æ–≤–∏–π –ø–ª–∞—Ç—ñ–∂',
        basketOrder: [{
          name: '–¢–µ—Å—Ç–æ–≤–∞ –ø–æ—Å–ª—É–≥–∞',
          qty: 1,
          sum: 50000
        }]
      },
      redirectUrl: 'https://stefa-books.com.ua/payment/success',
      webHookUrl: 'https://stefa-books.com.ua/api/payments/monobank/webhook',
      validity: 3600, // 1 –≥–æ–¥–∏–Ω–∞
      paymentType: 'debit'
    };

    // –°–ø—Ä–æ–±—É—î–º–æ —Ä—ñ–∑–Ω—ñ endpoint'–∏
    const endpoints = [
      'https://api.monobank.ua/api/merchant/invoice/create',
      'https://api.monobank.ua/merchant/invoice/create',
      'https://api.monobank.ua/personal/invoice/create',
      'https://api.monobank.ua/invoice/create'
    ];

    for (const endpoint of endpoints) {
      console.log(`   –ü—Ä–æ–±—É—î–º–æ: ${endpoint}`);
      
      try {
        const response = await fetch(endpoint, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-Token': MONOBANK_TOKEN
          },
          body: JSON.stringify(paymentData)
        });

        console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}`);
        
        if (response.ok) {
          const data = await response.json();
          console.log('‚úÖ –ü–ª–∞—Ç—ñ–∂ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
          console.log('   Invoice ID:', data.invoiceId);
          console.log('   Payment URL:', data.pageUrl);
          return data; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂—É
        } else {
          const errorText = await response.text();
          console.log(`   –ü–æ–º–∏–ª–∫–∞: ${errorText}`);
        }
      } catch (error) {
        console.log(`   –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: ${error.message}`);
      }
    }

    // –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—ñ–≤ –≤–∞–ª—é—Ç
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—ñ–≤ –≤–∞–ª—é—Ç...');
    try {
      const ratesResponse = await fetch('https://api.monobank.ua/bank/currency');
      
      if (ratesResponse.ok) {
        const rates = await ratesResponse.json();
        console.log('‚úÖ –ö—É—Ä—Å–∏ –≤–∞–ª—é—Ç –æ—Ç—Ä–∏–º–∞–Ω–æ:');
        rates.slice(0, 3).forEach(rate => {
          const currencyA = rate.currencyCodeA === 840 ? 'USD' : 
                          rate.currencyCodeA === 978 ? 'EUR' : 
                          rate.currencyCodeA;
          const currencyB = rate.currencyCodeB === 980 ? 'UAH' : rate.currencyCodeB;
          
          if (rate.rateSell) {
            console.log(`   ${currencyA}/${currencyB}: –∫—É–ø—ñ–≤–ª—è ${rate.rateBuy}, –ø—Ä–æ–¥–∞–∂ ${rate.rateSell}`);
          }
        });
      }
    } catch (error) {
      console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—ñ–≤: ${error.message}`);
    }

    // –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook'—É
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook...');
    try {
      const webhookResponse = await fetch('https://api.monobank.ua/personal/webhook', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Token': MONOBANK_TOKEN
        },
        body: JSON.stringify({
          webHookUrl: 'https://stefa-books.com.ua/api/monobank/webhook'
        })
      });

      console.log(`   –°—Ç–∞—Ç—É—Å webhook: ${webhookResponse.status}`);
      
      if (webhookResponse.ok) {
        console.log('‚úÖ Webhook –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
      } else {
        const errorText = await webhookResponse.text();
        console.log(`   –î–µ—Ç–∞–ª—ñ: ${errorText}`);
      }
    } catch (error) {
      console.log(`   –ü–æ–º–∏–ª–∫–∞ webhook: ${error.message}`);
    }

    // –¢–µ—Å—Ç 4: –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è QR-–∫–æ–¥—É –¥–ª—è –ø–ª–∞—Ç–µ–∂—É
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è QR-–∫–æ–¥—É...');
    try {
      const qrResponse = await fetch('https://api.monobank.ua/personal/qr', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Token': MONOBANK_TOKEN
        },
        body: JSON.stringify({
          amount: 50000,
          description: '–¢–µ—Å—Ç–æ–≤–∏–π QR –ø–ª–∞—Ç—ñ–∂'
        })
      });

      console.log(`   –°—Ç–∞—Ç—É—Å QR: ${qrResponse.status}`);
      
      if (qrResponse.ok) {
        const qrData = await qrResponse.json();
        console.log('‚úÖ QR –∫–æ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        console.log('   QR ID:', qrData.qrId);
      } else {
        const errorText = await qrResponse.text();
        console.log(`   –î–µ—Ç–∞–ª—ñ: ${errorText}`);
      }
    } catch (error) {
      console.log(`   –ü–æ–º–∏–ª–∫–∞ QR: ${error.message}`);
    }

    console.log('\nüìã –í–∏—Å–Ω–æ–≤–∫–∏:');
    console.log('   –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏—â–µ.');
    
  } catch (error) {
    console.log(`‚ùå –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞: ${error.message}`);
  }
}

testExtendedMonobankAPI();