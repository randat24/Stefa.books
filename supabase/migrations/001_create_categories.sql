-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
CREATE TABLE categories (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name VARCHAR(255) NOT NULL,
  name_en VARCHAR(255), -- –ê–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã
  slug VARCHAR(255) NOT NULL UNIQUE,
  parent_id UUID REFERENCES categories(id) ON DELETE CASCADE,
  icon VARCHAR(50), -- –ò–∫–æ–Ω–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (emoji –∏–ª–∏ lucide icon name)
  color VARCHAR(7), -- –¶–≤–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ hex —Ñ–æ—Ä–º–∞—Ç–µ
  description TEXT,
  sort_order INTEGER DEFAULT 0,
  is_active BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
CREATE INDEX idx_categories_parent_id ON categories(parent_id);
CREATE INDEX idx_categories_slug ON categories(slug);
CREATE INDEX idx_categories_active ON categories(is_active);
CREATE INDEX idx_categories_sort_order ON categories(sort_order);

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –¥–ª—è —Å–≤—è–∑–∏ –∫–Ω–∏–≥ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
ALTER TABLE books 
DROP COLUMN IF EXISTS category,
ADD COLUMN category_id UUID REFERENCES categories(id) ON DELETE SET NULL,
ADD COLUMN age_category_id UUID REFERENCES categories(id) ON DELETE SET NULL;

-- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –∫–Ω–∏–≥
CREATE INDEX idx_books_category_id ON books(category_id);
CREATE INDEX idx_books_age_category_id ON books(age_category_id);

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE TRIGGER update_categories_updated_at 
    BEFORE UPDATE ON categories 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- –í—Å—Ç–∞–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
INSERT INTO categories (name, name_en, slug, parent_id, icon, color, sort_order) VALUES
-- –ö–æ—Ä–Ω–µ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞
('–ü–æ–≤–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥', 'full_catalog', 'catalog', NULL, 'üìö', '#3B82F6', 1),

-- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
('–ó–∞ –≤—ñ–∫–æ–º', 'by_age', 'age', (SELECT id FROM categories WHERE slug = 'catalog'), 'üë∂', '#F59E0B', 1),
('–ù–∞–π–º–µ–Ω—à—ñ', 'toddlers', 'toddlers', (SELECT id FROM categories WHERE slug = 'age'), 'üçº', '#FEF3C7', 1),
('–î–æ—à–∫—ñ–ª—å–Ω–∏–π –≤—ñ–∫', 'preschool', 'preschool', (SELECT id FROM categories WHERE slug = 'age'), 'üß∏', '#FDE68A', 2),
('–ú–æ–ª–æ–¥—à–∏–π –≤—ñ–∫', 'elementary', 'elementary', (SELECT id FROM categories WHERE slug = 'age'), 'üéí', '#FBBF24', 3),
('–°–µ—Ä–µ–¥–Ω—ñ–π –≤—ñ–∫', 'middle', 'middle', (SELECT id FROM categories WHERE slug = 'age'), 'üìñ', '#F59E0B', 4),
('–ü—ñ–¥–ª—ñ—Ç–∫–æ–≤–∏–π –≤—ñ–∫', 'teen', 'teen', (SELECT id FROM categories WHERE slug = 'age'), 'üéì', '#D97706', 5),

-- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∂–∞–Ω—Ä—É
('–ó–∞ –∂–∞–Ω—Ä–æ–º', 'by_genre', 'genre', (SELECT id FROM categories WHERE slug = 'catalog'), 'üìö', '#10B981', 2),
('–ö–∞–∑–∫–∏', 'fairy_tales', 'fairy-tales', (SELECT id FROM categories WHERE slug = 'genre'), 'üßö', '#D1FAE5', 1),
('–ü—ñ–∑–Ω–∞–≤–∞–ª—å–Ω—ñ', 'educational', 'educational', (SELECT id FROM categories WHERE slug = 'genre'), 'üî¨', '#A7F3D0', 2),
('–î–µ—Ç–µ–∫—Ç–∏–≤', 'detective', 'detective', (SELECT id FROM categories WHERE slug = 'genre'), 'üîç', '#6EE7B7', 3),
('–ü—Ä–∏–≥–æ–¥–∏', 'adventure', 'adventure', (SELECT id FROM categories WHERE slug = 'genre'), 'üó∫Ô∏è', '#34D399', 4),
('–ü–æ–≤—ñ—Å—Ç—å', 'novel', 'novel', (SELECT id FROM categories WHERE slug = 'genre'), 'üìù', '#10B981', 5),
('–§–µ–Ω—Ç–µ–∑—ñ', 'fantasy', 'fantasy', (SELECT id FROM categories WHERE slug = 'genre'), 'üêâ', '#059669', 6),
('–†–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∞ –ø—Ä–æ–∑–∞', 'realistic', 'realistic', (SELECT id FROM categories WHERE slug = 'genre'), 'üåç', '#047857', 7),
('–†–æ–º–∞–Ω—Ç–∏–∫–∞', 'romance', 'romance', (SELECT id FROM categories WHERE slug = 'genre'), 'üíù', '#065F46', 8),

-- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö
('–î–ª—è –¥–æ—Ä–æ—Å–ª–∏—Ö', 'for_adults', 'adults', (SELECT id FROM categories WHERE slug = 'catalog'), 'üë•', '#8B5CF6', 3),
('–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—è —ñ —Å–∞–º–æ—Ä–æ–∑–≤–∏—Ç–æ–∫', 'psychology', 'psychology', (SELECT id FROM categories WHERE slug = 'adults'), 'üß†', '#DDD6FE', 1),
('–°—É—á–∞—Å–Ω–∞ –ø—Ä–æ–∑–∞', 'modern_prose', 'modern-prose', (SELECT id FROM categories WHERE slug = 'adults'), '‚úçÔ∏è', '#C4B5FD', 2);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
CREATE OR REPLACE FUNCTION get_category_tree(parent_uuid UUID DEFAULT NULL)
RETURNS TABLE (
    id UUID,
    name VARCHAR,
    name_en VARCHAR,
    slug VARCHAR,
    parent_id UUID,
    icon VARCHAR,
    color VARCHAR,
    description TEXT,
    sort_order INTEGER,
    level INTEGER,
    path TEXT[]
) AS $$
WITH RECURSIVE category_tree AS (
    -- –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π: –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è –∏–ª–∏ –¥–µ—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ parent_uuid
    SELECT 
        c.id, 
        c.name, 
        c.name_en,
        c.slug,
        c.parent_id,
        c.icon,
        c.color,
        c.description,
        c.sort_order,
        1 as level,
        ARRAY[c.name] as path
    FROM categories c
    WHERE 
        CASE 
            WHEN parent_uuid IS NULL THEN c.parent_id IS NULL
            ELSE c.parent_id = parent_uuid
        END
        AND c.is_active = TRUE
    
    UNION ALL
    
    -- –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π —Å–ª—É—á–∞–π: –¥–µ—Ç–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    SELECT 
        c.id,
        c.name,
        c.name_en,
        c.slug,
        c.parent_id,
        c.icon,
        c.color,
        c.description,
        c.sort_order,
        ct.level + 1,
        ct.path || c.name
    FROM categories c
    INNER JOIN category_tree ct ON c.parent_id = ct.id
    WHERE c.is_active = TRUE
)
SELECT * FROM category_tree
ORDER BY level, sort_order, name;
$$ LANGUAGE SQL;

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
CREATE OR REPLACE FUNCTION get_category_breadcrumbs(category_uuid UUID)
RETURNS TABLE (
    id UUID,
    name VARCHAR,
    slug VARCHAR,
    level INTEGER
) AS $$
WITH RECURSIVE breadcrumbs AS (
    -- –ù–∞—á–∏–Ω–∞–µ–º —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    SELECT 
        c.id,
        c.name,
        c.slug,
        c.parent_id,
        1 as level
    FROM categories c
    WHERE c.id = category_uuid
    
    UNION ALL
    
    -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∏–¥–µ–º –≤–≤–µ—Ä—Ö –ø–æ –∏–µ—Ä–∞—Ä—Ö–∏–∏
    SELECT 
        c.id,
        c.name,
        c.slug,
        c.parent_id,
        b.level + 1
    FROM categories c
    INNER JOIN breadcrumbs b ON c.id = b.parent_id
)
SELECT 
    breadcrumbs.id,
    breadcrumbs.name,
    breadcrumbs.slug,
    breadcrumbs.level
FROM breadcrumbs
ORDER BY level DESC;
$$ LANGUAGE SQL;

-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ RLS (Row Level Security) –ø–æ–ª–∏—Ç–∏–∫
ALTER TABLE categories ENABLE ROW LEVEL SECURITY;

-- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è (–≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —á–∏—Ç–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
CREATE POLICY "Categories are viewable by everyone" ON categories
    FOR SELECT USING (is_active = TRUE);

-- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)
CREATE POLICY "Categories are editable by admins only" ON categories
    FOR ALL USING (auth.jwt() ->> 'role' = 'admin');

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
CREATE VIEW categories_with_parent AS
SELECT 
    c.id,
    c.name,
    c.name_en,
    c.slug,
    c.parent_id,
    p.name as parent_name,
    p.slug as parent_slug,
    c.icon,
    c.color,
    c.description,
    c.sort_order,
    c.is_active,
    c.created_at,
    c.updated_at
FROM categories c
LEFT JOIN categories p ON c.parent_id = p.id
WHERE c.is_active = TRUE
ORDER BY c.sort_order, c.name;